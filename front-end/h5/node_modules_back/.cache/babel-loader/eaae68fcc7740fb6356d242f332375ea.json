{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-button.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-button.js","mtime":1575948266500},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport commonProps from \"./common/props.js\";\nexport default {\n  render: function render() {\n    var h = arguments[0];\n    var color = this.color,\n        textAlign = this.textAlign,\n        backgroundColor = this.backgroundColor,\n        fontSize = this.fontSize,\n        lineHeight = this.lineHeight,\n        borderColor = this.borderColor,\n        borderRadius = this.borderRadius,\n        borderWidth = this.borderWidth,\n        text = this.text,\n        disabled = this.disabled;\n    var style = {\n      color: color,\n      textAlign: textAlign,\n      backgroundColor: backgroundColor,\n      fontSize: fontSize,\n      lineHeight: lineHeight + 'em',\n      borderColor: borderColor,\n      borderRadius: borderRadius + 'px',\n      borderWidth: borderWidth + 'px',\n      textDecoration: 'none',\n      disabled: disabled\n    };\n    return h(\"button\", {\n      \"attrs\": {\n        \"type\": \"submit\"\n      },\n      \"style\": style,\n      \"on\": {\n        \"click\": this.handleClick\n      }\n    }, [text]);\n  },\n  name: 'lbp-form-button',\n  props: {\n    text: commonProps.text(),\n    vertical: commonProps.vertical,\n    backgroundColor: commonProps.backgroundColor,\n    color: commonProps.color,\n    fontSize: commonProps.fontSize,\n    lineHeight: commonProps.lineHeight,\n    borderWidth: commonProps.borderWidth,\n    borderRadius: commonProps.borderRadius,\n    borderColor: commonProps.borderColor,\n    textAlign: commonProps.textAlign()\n  },\n  methods: {\n    handleClick: function handleClick() {\n      if (this.disabled) return;\n      var val1 = document.querySelector('input').value;\n      document.querySelector('input').required = 'true'; //  oninvalid=\"setCustomValidity('不能为空')\" oninput=\"setCustomValidity('')\"\n\n      document.querySelector('input').setAttribute(\"oninvalid\", \"setCustomValidity('不能为空')\");\n      var val2 = document.getElementsByTagName('input')[1].value;\n\n      if (val1 != '' && val2 != '') {\n        // #!zh: data-type=lbp-form-input 在 lbp-form-input 组件中定义\n        var inputs = document.querySelectorAll(\"[data-type^='lbp-form-input']\");\n        if (!inputs.length) return;\n        var self = this;\n        var formData = new FormData(); // console.log(document.getElementsByName('name').value)\n\n        if (document.getElementsByName('name').value == '') {\n          confirm(\"输入项不能为空\");\n          return;\n        }\n\n        inputs.forEach(function (input) {\n          return formData.append(input.dataset.uuid, input.value);\n        });\n        var req = new XMLHttpRequest();\n\n        req.onreadystatechange = function () {\n          if (req.readyState === 4) {\n            var message = req.status === 200 ? '提交成功' : '提交失败'; // self.$message.info(message)\n\n            confirm(message);\n          }\n        }; // #!zh: vuex.module.editor.setWork 中定义\n\n\n        var workId = window.__work.id; // TODO #!zh: 可以动态配置表单提交地址\n\n        req.open('post', \"/works/form/submit/\".concat(workId), true);\n        req.send(formData);\n      }\n    }\n  },\n  editorConfig: {\n    components: {\n      'lbs-select-input-type': {\n        props: ['value'],\n        computed: {\n          value_: {\n            get: function get() {\n              return this.value;\n            },\n            set: function set(val) {\n              this.$emit('input', val);\n            }\n          }\n        },\n        template: \"\\n          <a-select v-model=\\\"value_\\\" placeholder=\\\"\\u7C7B\\u578B\\\">\\n            <a-option\\n              v-for=\\\"item in options\\\"\\n              :key=\\\"item.value\\\"\\n              :label=\\\"item.label\\\"\\n              :value=\\\"item.value\\\">\\n            </a-option>\\n          </a-select>\\n        \",\n        data: function data() {\n          return {\n            options: [{\n              label: '文字',\n              value: 'text'\n            }, {\n              label: '密码',\n              value: 'password'\n            }, {\n              label: '日期',\n              value: 'date'\n            }, {\n              label: '邮箱',\n              value: 'email'\n            }, {\n              label: '手机号',\n              value: 'tel'\n            }]\n          };\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["d:/project/luban/luban-h5/front-end/h5/src/components/plugins/lbp-form-button.js"],"names":["commonProps","render","color","textAlign","backgroundColor","fontSize","lineHeight","borderColor","borderRadius","borderWidth","text","disabled","style","textDecoration","handleClick","name","props","vertical","methods","val1","document","querySelector","value","required","setAttribute","val2","getElementsByTagName","inputs","querySelectorAll","length","self","formData","FormData","getElementsByName","confirm","forEach","input","append","dataset","uuid","req","XMLHttpRequest","onreadystatechange","readyState","message","status","workId","window","__work","id","open","send","editorConfig","components","computed","value_","get","set","val","$emit","template","data","options","label"],"mappings":"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","sourcesContent":["import commonProps from './common/props.js'\n\nexport default {\n  render () {\n    const {\n      color,\n      textAlign,\n      backgroundColor,\n      fontSize,\n      lineHeight,\n      borderColor,\n      borderRadius,\n      borderWidth,\n      text,\n      disabled\n    } = this\n\n    const style = {\n      color,\n      textAlign,\n      backgroundColor,\n      fontSize: fontSize,\n      lineHeight: lineHeight + 'em',\n      borderColor,\n      borderRadius: borderRadius + 'px',\n      borderWidth: borderWidth + 'px',\n      textDecoration: 'none',\n      disabled\n    }\n    return (\n      <button\n        type=\"submit\"\n        style={style}\n        onClick={this.handleClick}\n      >{text}</button>)\n  },\n  name: 'lbp-form-button',\n  props: {\n    text: commonProps.text(),\n    vertical: commonProps.vertical,\n    backgroundColor: commonProps.backgroundColor,\n    color: commonProps.color,\n    fontSize: commonProps.fontSize,\n    lineHeight: commonProps.lineHeight,\n    borderWidth: commonProps.borderWidth,\n    borderRadius: commonProps.borderRadius,\n    borderColor: commonProps.borderColor,\n    textAlign: commonProps.textAlign()\n  },\n  methods: {\n    handleClick () {\n      if (this.disabled) return\n      let val1 = document.querySelector('input').value;\n         document.querySelector('input').required ='true';\n        //  oninvalid=\"setCustomValidity('不能为空')\" oninput=\"setCustomValidity('')\"\n         document.querySelector('input').setAttribute(\"oninvalid\",\"setCustomValidity('不能为空')\")\n         let val2 = document.getElementsByTagName('input')[1].value;\n         if(val1 !='' &&val2 !=''){\n      // #!zh: data-type=lbp-form-input 在 lbp-form-input 组件中定义\n      let inputs = document.querySelectorAll(\"[data-type^='lbp-form-input']\")\n      if (!inputs.length) return\n      const self = this\n      let formData = new FormData()\n     \n      // console.log(document.getElementsByName('name').value)\n      if(document.getElementsByName('name').value == ''){\n        confirm(\"输入项不能为空\")\n        return\n      }\n      inputs.forEach(input => formData.append(input.dataset.uuid, input.value))\n      const req = new XMLHttpRequest()\n      req.onreadystatechange = function () {\n        if (req.readyState === 4) {\n          const message = req.status === 200 ? '提交成功' : '提交失败'\n          // self.$message.info(message)\n          confirm(message)\n        }\n      }\n\n      // #!zh: vuex.module.editor.setWork 中定义\n      const workId = window.__work.id\n      // TODO #!zh: 可以动态配置表单提交地址\n      req.open('post', `/works/form/submit/${workId}`, true)\n      req.send(formData)\n    }\n  }\n  },\n  editorConfig: {\n    components: {\n      'lbs-select-input-type': {\n        props: ['value'],\n        computed: {\n          value_: {\n            get () {\n              return this.value\n            },\n            set (val) {\n              this.$emit('input', val)\n            }\n          }\n        },\n        template: `\n          <a-select v-model=\"value_\" placeholder=\"类型\">\n            <a-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </a-option>\n          </a-select>\n        `,\n        data: () => ({\n          options: [\n            {\n              label: '文字',\n              value: 'text'\n            },\n            {\n              label: '密码',\n              value: 'password'\n            },\n            {\n              label: '日期',\n              value: 'date'\n            },\n            {\n              label: '邮箱',\n              value: 'email'\n            },\n            {\n              label: '手机号',\n              value: 'tel'\n            }\n          ]\n        })\n      }\n    }\n  }\n}\n"]}]}