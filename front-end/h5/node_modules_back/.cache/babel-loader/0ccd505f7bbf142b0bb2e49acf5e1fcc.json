{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\page-manager\\index.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\page-manager\\index.js","mtime":1575526862182},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["export default {\n  props: {\n    pages: {\n      required: false,\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    editingPage: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      hoverIndex: -1,\n      // 显示编辑按钮\n      editingTitle: '' // 临时缓存当前编辑的 title，点击 Yes 再真正用其更新 page title\n\n    };\n  },\n  methods: {\n    getTitle: function getTitle(page, index) {\n      return page.title || this.$t('editor.pageManager.title', {\n        index: index\n      });\n    },\n    _renderEditTitle: function _renderEditTitle(page, index) {\n      var _this = this;\n\n      var h = this.$createElement;\n      return h(\"a-popconfirm\", {\n        \"attrs\": {\n          \"placement\": \"bottom\",\n          \"okText\": \"Yes\",\n          \"cancelText\": \"No\"\n        },\n        \"on\": {\n          \"confirm\": function confirm() {\n            _this.$emit('editTitle', {\n              newTitle: _this.editingTitle,\n              pageIndexForEditingTitle: index\n            });\n          },\n          \"cancel\": function cancel() {}\n        }\n      }, [h(\"a-input\", {\n        \"slot\": \"title\",\n        \"attrs\": {\n          \"value\": this.editingTitle,\n          \"size\": \"small\"\n        },\n        \"on\": {\n          \"change\": function change(e) {\n            _this.editingTitle = e.target.value;\n          }\n        }\n      }), h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"edit\"\n        },\n        \"on\": {\n          \"click\": function click(e) {\n            e.stopPropagation(); // 将 click icon 与 click page item 隔离开。编辑标题的同时不要切换页面\n\n            _this.editingTitle = _this.getTitle(page, index);\n          }\n        }\n      })]);\n    },\n    _renderTitleMenu: function _renderTitleMenu(page, index) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var addPageText = this.$t('editor.pageManager.action.add');\n      var copyPageText = this.$t('editor.pageManager.action.copy');\n      var deletePageText = this.$t('editor.pageManager.action.delete');\n      return h(\"a-dropdown\", {\n        \"attrs\": {\n          \"trigger\": ['hover'],\n          \"placement\": 'bottomCenter'\n        }\n      }, [h(\"a\", {\n        \"class\": \"ml-2\",\n        \"attrs\": {\n          \"href\": \"#\"\n        }\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"down\"\n        }\n      })]), h(\"a-menu\", {\n        \"slot\": \"overlay\",\n        \"on\": {\n          \"click\": function click(_ref) {\n            var key = _ref.key;\n            return _this2.$emit('selectMenuItem', key);\n          }\n        }\n      }, [h(\"a-menu-item\", {\n        \"key\": \"add\"\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"plus\"\n        }\n      }), addPageText]), h(\"a-menu-item\", {\n        \"key\": \"copy\"\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"copy\"\n        }\n      }), copyPageText]), h(\"a-menu-item\", {\n        \"key\": \"delete\"\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"delete\"\n        }\n      }), deletePageText])])]);\n    },\n    onLeave: function onLeave() {\n      this.hoverIndex = -1;\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var addPageText = this.$t('editor.pageManager.action.add');\n    return h(\"div\", {\n      \"class\": \"page-manager-panel\"\n    }, [this.pages.map(function (page, index) {\n      return h(\"span\", {\n        \"class\": ['cursor-pointer', 'page-manager-panel__item', page.uuid === _this3.editingPage.uuid && 'active'],\n        \"on\": {\n          \"click\": function click() {\n            _this3.$emit('selectPage', index);\n          },\n          \"mouseenter\": function mouseenter() {\n            _this3.hoverIndex = index;\n          }\n        }\n      }, [h(\"span\", [h(\"a-badge\", {\n        \"attrs\": {\n          \"count\": index + 1,\n          \"numberStyle\": {\n            backgroundColor: '#fff',\n            color: '#999',\n            boxShadow: '0 0 0 1px #d9d9d9 inset'\n          }\n        }\n      }), h(\"span\", {\n        \"class\": \"ml-3\"\n      }, [_this3.getTitle(page, index)])]), h(\"span\", [_this3.hoverIndex === index && _this3._renderEditTitle(page, index), _this3._renderTitleMenu(page, index)])]);\n    }), h(\"a-button\", {\n      \"attrs\": {\n        \"icon\": \"plus\",\n        \"type\": \"dashed\"\n      },\n      \"class\": \"footer-actions\",\n      \"on\": {\n        \"click\": function click() {\n          _this3.$emit('selectMenuItem', 'add');\n        }\n      }\n    }, [addPageText])]);\n  }\n};",{"version":3,"sources":["D:/project/luban/luban-h5/front-end/h5/src/components/core/editor/page-manager/index.js"],"names":["props","pages","required","type","Array","default","editingPage","Object","data","hoverIndex","editingTitle","methods","getTitle","page","index","title","$t","_renderEditTitle","$emit","newTitle","pageIndexForEditingTitle","e","target","value","stopPropagation","_renderTitleMenu","addPageText","copyPageText","deletePageText","key","onLeave","render","h","map","uuid","backgroundColor","color","boxShadow"],"mappings":"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","sourcesContent":["export default {\r\n  props: {\r\n    pages: {\r\n      required: false,\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    editingPage: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data: () => ({\r\n    hoverIndex: -1, // 显示编辑按钮\r\n    editingTitle: '' // 临时缓存当前编辑的 title，点击 Yes 再真正用其更新 page title\r\n  }),\r\n  methods: {\r\n    getTitle (page, index) {\r\n      return page.title || this.$t('editor.pageManager.title', { index })\r\n    },\r\n    _renderEditTitle (page, index) {\r\n      return (\r\n        <a-popconfirm\r\n          placement=\"bottom\"\r\n          onConfirm={() => {\r\n            this.$emit('editTitle', { newTitle: this.editingTitle, pageIndexForEditingTitle: index })\r\n          }}\r\n          onCancel={() => {}}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n        >\r\n          <a-input\r\n            slot=\"title\"\r\n            value={this.editingTitle}\r\n            size=\"small\"\r\n            onChange={e => {\r\n              this.editingTitle = e.target.value\r\n            }}\r\n          >\r\n          </a-input>\r\n          <a-icon type=\"edit\" onClick={(e) => {\r\n            e.stopPropagation() // 将 click icon 与 click page item 隔离开。编辑标题的同时不要切换页面\r\n            this.editingTitle = this.getTitle(page, index)\r\n          }}/>\r\n        </a-popconfirm>\r\n      )\r\n    },\r\n    _renderTitleMenu (page, index) {\r\n      const addPageText = this.$t('editor.pageManager.action.add')\r\n      const copyPageText = this.$t('editor.pageManager.action.copy')\r\n      const deletePageText = this.$t('editor.pageManager.action.delete')\r\n      return (\r\n        <a-dropdown trigger={['hover']} placement='bottomCenter'>\r\n          <a class=\"ant-dropdown-link\" href=\"#\" class=\"ml-2\"><a-icon type=\"down\" /></a>\r\n          <a-menu slot=\"overlay\" onClick={({ key }) => this.$emit('selectMenuItem', key)}>\r\n            <a-menu-item key=\"add\"><a-icon type=\"plus\" />{addPageText}</a-menu-item>\r\n            <a-menu-item key=\"copy\"><a-icon type=\"copy\" />{copyPageText}</a-menu-item>\r\n            <a-menu-item key=\"delete\"><a-icon type=\"delete\" />{deletePageText}</a-menu-item>\r\n          </a-menu>\r\n        </a-dropdown>\r\n      )\r\n    },\r\n    onLeave () {\r\n      this.hoverIndex = -1\r\n    }\r\n  },\r\n  render (h) {\r\n    const addPageText = this.$t('editor.pageManager.action.add')\r\n    return (\r\n      <div class=\"page-manager-panel\">\r\n        {\r\n          this.pages.map((page, index) => (\r\n            <span\r\n              class={[\r\n                'cursor-pointer',\r\n                'page-manager-panel__item',\r\n                page.uuid === this.editingPage.uuid && 'active'\r\n              ]}\r\n              onClick={() => { this.$emit('selectPage', index) }}\r\n              // https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VHover/VHover.ts\r\n              onMouseenter={() => { this.hoverIndex = index }}\r\n            >\r\n              {/* #!en: Page<Index> */}\r\n              {/* #!zh: 第<Index>页面 */}\r\n              <span>\r\n                <a-badge\r\n                  count={index + 1}\r\n                  numberStyle={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}\r\n                />\r\n                <span class=\"ml-3\">{this.getTitle(page, index)}</span>\r\n              </span>\r\n              <span>\r\n                {this.hoverIndex === index && this._renderEditTitle(page, index)}\r\n                {this._renderTitleMenu(page, index)}\r\n              </span>\r\n            </span>\r\n          ))\r\n        }\r\n        <a-button\r\n          icon=\"plus\"\r\n          type=\"dashed\"\r\n          class=\"footer-actions\"\r\n          onClick={() => { this.$emit('selectMenuItem', 'add') }}\r\n        >{addPageText}</a-button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}