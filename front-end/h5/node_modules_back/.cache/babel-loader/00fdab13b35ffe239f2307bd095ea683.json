{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\utils\\canvas-helper.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\utils\\canvas-helper.js","mtime":1575526862422},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.split\";\nimport html2canvas from 'html2canvas'; // https://stackoverflow.com/questions/12168909/blob-from-dataurl\n\nfunction dataURItoBlob(dataURI) {\n  // convert base64 to raw binary data held in a string\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n  var byteString = atob(dataURI.split(',')[1]); // separate out the mime component\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]; // write the bytes of the string to an ArrayBuffer\n\n  var ab = new ArrayBuffer(byteString.length); // create a view into the buffer\n\n  var ia = new Uint8Array(ab); // set the bytes of the buffer to the correct values\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  } // write the ArrayBuffer to a blob, and you're done\n\n\n  var blob = new Blob([ab], {\n    type: mimeString\n  });\n  return blob;\n}\n/**\r\n * 生成作品封面图(截图)\r\n * @param {String} selector\r\n * @param {文件名} fileName\r\n */\n\n\nexport function takeScreenshot() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.canvas-wrapper';\n  var fileName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(+new Date());\n  var el = document.querySelector(selector);\n  return new Promise(function (resolve, reject) {\n    // html2canvas document: https://html2canvas.hertzen.com/configuration\n    // allowTaint: Whether to allow cross-origin images to taint the canvas\n    // if you use allowTaint: true, the cors image will taint the canvas, and canvas.toDataURL won't work\n    // 会对canvas造成污染，导致 canvas.toDataURL 无效\n    html2canvas(el, {\n      proxy: '/works/cors-proxy'\n    }).then(function (canvas) {\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL\n      var dataUrl = canvas.toDataURL('image/jpeg', 0.6);\n      var blob = dataURItoBlob(dataUrl);\n      var file = new window.File([blob], fileName, {\n        type: 'image/png'\n      });\n      resolve(file); // canvas.toBlob(blob => {\n      //   const file = new window.File([blob], fileName, { type: 'image/png' })\n      //   resolve(file)\n      // })\n    });\n  });\n}",null]}