{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\shape.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\shape.js","mtime":1575940953801},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport animationMixin from '@/mixins/animation.js';\n/**\r\n * #!zh: 上下左右 对应的 东南西北\r\n * #!en: top(north)、bottom(south)、left(west)、right(east)\r\n */\n\nvar directionKey = {\n  t: 'n',\n  b: 's',\n  l: 'w',\n  r: 'e'\n}; // #!zh: 四个边角、两条中线上的点\n\nvar points = ['lt', 'rt', 'lb', 'rb', 'l', 'r', 't', 'b'];\nexport default {\n  mixins: [animationMixin],\n  props: ['defaultPosition', 'active', 'handleMousedownProp', 'handleElementMoveProp', 'handlePointMoveProp', 'handleElementMouseUpProp', 'handlePointMouseUpProp', 'element'],\n  computed: {\n    position: function position() {\n      return _objectSpread({}, this.defaultPosition);\n    }\n  },\n  methods: {\n    /**\r\n     * 通过方位计算样式，主要是 top、left、鼠标样式\r\n     */\n    getPointStyle: function getPointStyle(point) {\n      var isWrapElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pos = this.position;\n      var top = pos.top; // !#zh 减4是为了让元素能够处于 border 的中间\n\n      var left = pos.left;\n      var height = pos.height;\n      var width = pos.width;\n      var hasT = /t/.test(point);\n      var hasB = /b/.test(point);\n      var hasL = /l/.test(point);\n      var hasR = /r/.test(point);\n      var newLeft = 0;\n      var newTop = 0;\n      var cans = document.getElementsByClassName('edit-mode')[0].clientHeight;\n\n      if (pos.top + pos.height > cans) {\n        document.getElementsByClassName('edit-mode')[0].style.height = pos.top + pos.height + 'px';\n        document.getElementsByClassName('canvas-wrapper')[0].style.height = pos.top + pos.height + 'px';\n      } else if (pos.top + pos.height <= 566) {\n        document.getElementsByClassName('edit-mode')[0].style.height = 566 + 'px';\n      }\n\n      if (point.length === 2) {\n        newLeft = hasL ? 0 : width;\n        newTop = hasT ? 0 : height;\n      } else {\n        // !#zh 上下点，宽度固定在中间\n        if (hasT || hasB) {\n          newLeft = width / 2;\n          newTop = hasT ? 0 : height;\n        } // !#zh 左右点，高度固定在中间\n\n\n        if (hasL || hasR) {\n          newLeft = hasL ? 0 : width;\n          newTop = height / 2;\n        }\n      }\n\n      var style = {\n        marginLeft: hasL || hasR ? '-3px' : 0,\n        marginTop: hasT || hasB ? '-3px' : 0,\n        left: \"\".concat(newLeft + (isWrapElement ? 0 : left), \"px\"),\n        top: \"\".concat(newTop + (isWrapElement ? 0 : top), \"px\"),\n        cursor: point.split('').reverse().map(function (m) {\n          return directionKey[m];\n        }).join('') + '-resize'\n      };\n      return style;\n    },\n\n    /**\r\n     * !#zh 主要目的是：阻止冒泡\r\n     */\n    handleWrapperClick: function handleWrapperClick(e) {// e.stopPropagation()\n      // e.preventDefault()\n    },\n    mousedownForMark: function mousedownForMark(point, downEvent) {\n      var _this = this;\n\n      downEvent.stopPropagation();\n      downEvent.preventDefault(); // Let's stop this event.\n\n      var pos = _objectSpread({}, this.position);\n\n      console.log('pos', pos);\n      var height = pos.height;\n      var width = pos.width;\n      var top = pos.top;\n      var left = pos.left;\n      var startX = downEvent.clientX;\n      var startY = downEvent.clientY;\n\n      var move = function move(moveEvent) {\n        var currX = moveEvent.clientX;\n        var currY = moveEvent.clientY;\n        var disY = currY - startY;\n        var disX = currX - startX;\n        var hasT = /t/.test(point);\n        var hasB = /b/.test(point);\n        var hasL = /l/.test(point);\n        var hasR = /r/.test(point);\n        var newHeight = +height + (hasT ? -disY : hasB ? disY : 0);\n        var newWidth = +width + (hasL ? -disX : hasR ? disX : 0);\n        pos.height = newHeight > 0 ? newHeight : 0;\n        pos.width = newWidth > 0 ? newWidth : 0;\n        pos.left = +left + (hasL ? disX : 0);\n        pos.top = +top + (hasT ? disY : 0);\n\n        _this.handlePointMoveProp(pos);\n      };\n\n      var up = function up() {\n        _this.handlePointMouseUpProp();\n\n        document.removeEventListener('mousemove', move);\n        document.removeEventListener('mouseup', up);\n      };\n\n      document.addEventListener('mousemove', move);\n      document.addEventListener('mouseup', up);\n    },\n\n    /**\r\n     * !#zh 给 当前选中元素 添加鼠标移动相关事件\r\n     *\r\n     * @param {mouseEvent} e\r\n     */\n    mousedownForElement: function mousedownForElement(e) {\n      var _this2 = this;\n\n      var pos = _objectSpread({}, this.position);\n\n      var startY = e.clientY;\n      var startX = e.clientX;\n      var startTop = pos.top;\n      var startLeft = pos.left;\n\n      var move = function move(moveEvent) {\n        // !#zh 移动的时候，不需要向后代元素传递事件，只需要单纯的移动就OK\n        moveEvent.stopPropagation();\n        moveEvent.preventDefault();\n        var currX = moveEvent.clientX;\n        var currY = moveEvent.clientY;\n        pos.top = currY - startY + startTop;\n        pos.left = currX - startX + startLeft;\n\n        _this2.handleElementMoveProp(pos);\n      };\n\n      var up = function up(moveEvent) {\n        _this2.handleElementMouseUpProp();\n\n        document.removeEventListener('mousemove', move, true);\n        document.removeEventListener('mouseup', up, true);\n      };\n\n      document.addEventListener('mousemove', move, true);\n      document.addEventListener('mouseup', up, true); // TODO add comment\n\n      return true;\n    },\n    handleMousedown: function handleMousedown(e) {\n      if (this.handleMousedownProp) {\n        this.handleMousedownProp();\n        this.mousedownForElement(e, this.element);\n      }\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    return h(\"div\", {\n      \"on\": {\n        \"click\": this.handleWrapperClick,\n        \"mousedown\": this.handleMousedown\n      },\n      \"class\": {\n        'shape__wrapper-active': this.active\n      }\n    }, [this.active && points.map(function (point) {\n      var pointStyle = _this3.getPointStyle(point);\n\n      return h(\"div\", {\n        \"key\": point,\n        \"attrs\": {\n          \"data-point\": point\n        },\n        \"style\": pointStyle,\n        \"class\": \"shape__scale-point\",\n        \"on\": {\n          \"mousedown\": _this3.mousedownForMark.bind(_this3, point)\n        }\n      });\n    }), this.$slots.default]);\n  }\n};",null]}