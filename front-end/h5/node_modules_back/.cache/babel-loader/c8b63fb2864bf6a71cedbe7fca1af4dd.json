{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue","mtime":1575875175805},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js","mtime":1575454488300}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState, mapActions } from 'vuex';\nimport QRCode from 'qrcode';\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue';\nimport CardCover from '@/components/common/work/card-cover.js';\nvar ListItemCard = {\n  props: {\n    work: {\n      type: Object,\n      default: function _default() {}\n    },\n    handleClickEdit: {\n      type: Function,\n      default: function _default() {}\n    },\n    handleClickPreview: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      qrcodeUrl: ''\n    };\n  },\n  methods: {\n    timeFmt: function timeFmt(date) {\n      var dateTime = new Date(date);\n      var displayTime = \"\".concat(dateTime.getFullYear(), \"-\").concat(dateTime.getMonth() + 1, \"-\").concat(dateTime.getDate());\n      return displayTime;\n    },\n    genQRCodeUrl: function genQRCodeUrl(work) {\n      var _this = this;\n\n      var url = \"/works/preview/\".concat(work.id);\n      QRCode.toDataURL(url, function (err, url) {\n        if (err) console.log(err);\n        _this.qrcodeUrl = url;\n      });\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    return h(\"a-card\", {\n      \"attrs\": {\n        \"hoverable\": true\n      }\n    }, [h(CardCover, {\n      \"slot\": \"cover\",\n      \"attrs\": {\n        \"qrcodeUrl\": this.qrcodeUrl,\n        \"coverImageUrl\": this.work.cover_image_url\n      }\n    }), h(\"template\", {\n      \"class\": \"ant-card-actions\",\n      \"slot\": \"actions\"\n    }, [h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.edit')\n      }\n    }, [h(\"router-link\", {\n      \"attrs\": {\n        \"to\": {\n          name: 'editor',\n          params: {\n            workId: this.work.id\n          }\n        },\n        \"target\": \"_blank\"\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"edit\",\n        \"title\": this.$t('workCard.edit')\n      }\n    })])]), h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.preview')\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"eye\",\n        \"title\": this.$t('workCard.preview')\n      },\n      \"on\": {\n        \"click\": this.handleClickPreview\n      }\n    })]), this.qrcodeUrl ? h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"close-circle\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          _this2.qrcodeUrl = '';\n        }\n      }\n    }) : h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"qrcode\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          return _this2.genQRCodeUrl(_this2.work);\n        }\n      }\n    })]), h(\"a-card-meta\", [h(\"div\", {\n      \"slot\": \"title\",\n      \"class\": \"ant-card-meta-title\",\n      \"style\": \"font-size: 14px;\"\n    }, [this.work.title, \"(\", this.work.id, \")\"]), h(\"div\", {\n      \"slot\": \"description\",\n      \"style\": \"font-size: 12px;\"\n    }, [h(\"div\", [this.$t('workCard.description'), \": \", this.work.description]), h(\"div\", [this.$t('workCard.createTime'), \": \", this.timeFmt(this.work.created_at)])])])]);\n  }\n};\nvar AddNewCard = {\n  functional: true,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        parent = _ref.parent;\n    return h(\"a-card\", {\n      \"attrs\": {\n        \"hoverable\": true\n      }\n    }, [h(\"div\", {\n      \"slot\": \"cover\",\n      \"class\": \"flex-center\",\n      \"style\": \"height: 415px;background: #f7f5f557;\",\n      \"on\": {\n        \"click\": props.handleCreate\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"plus\"\n      }\n    })]), h(\"template\", {\n      \"class\": \"ant-card-actions\",\n      \"slot\": \"actions\"\n    }, [h(\"span\", {\n      \"on\": {\n        \"click\": props.handleCreate\n      }\n    }, [parent.$t('workCard.createNewWork')])])]);\n  }\n};\nexport default {\n  components: {\n    ListItemCard: ListItemCard,\n    AddNewCard: AddNewCard\n  },\n  data: function data() {\n    return {\n      activeWork: null,\n      previewVisible: false\n    };\n  },\n  computed: _objectSpread({}, mapState('editor', ['works']), {}, mapState('loading', ['fetchWorks_loading'])),\n  methods: _objectSpread({}, mapActions('editor', ['fetchWorks', 'createWork']), {\n    deleteWork: function deleteWork(item) {// TODO delete work from work list\n    }\n  }),\n  render: function render(h) {\n    var _this3 = this;\n\n    return h(\"div\", {\n      \"class\": \"works-wrapper\"\n    }, [h(\"a-row\", {\n      \"attrs\": {\n        \"gutter\": 12\n      }\n    }, [h(\"a-col\", {\n      \"attrs\": {\n        \"span\": 6\n      },\n      \"style\": \"margin-bottom: 10px;\"\n    }, [h(AddNewCard, {\n      \"attrs\": {\n        \"handleCreate\": this.createWork\n      }\n    })]), this.fetchWorks_loading ? h(\"a-col\", {\n      \"attrs\": {\n        \"span\": 18\n      },\n      \"style\": \"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\"\n    }, [h(\"a-spin\", {\n      \"attrs\": {\n        \"tip\": \"作品列表获取中...\"\n      }\n    })]) : this.works.map(function (work) {\n      return h(\"a-col\", {\n        \"attrs\": {\n          \"span\": 6\n        },\n        \"key\": work.id,\n        \"style\": \"margin-bottom: 20px;\"\n      }, [h(ListItemCard, {\n        \"attrs\": {\n          \"work\": work,\n          \"handleClickPreview\": function handleClickPreview(e) {\n            _this3.previewVisible = true;\n            _this3.activeWork = work;\n          }\n        }\n      })]);\n    })]), h(PreviewDialog, {\n      \"attrs\": {\n        \"work\": this.activeWork || {},\n        \"visible\": this.previewVisible,\n        \"handleClose\": function handleClose() {\n          _this3.previewVisible = false;\n        }\n      }\n    })]);\n  },\n  created: function created() {\n    this.fetchWorks();\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport QRCode from 'qrcode'\r\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue'\r\nimport CardCover from '@/components/common/work/card-cover.js'\r\nconst ListItemCard = {\r\n  props: {\r\n    work: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n    handleClickEdit: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    handleClickPreview: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data: () => ({\r\n    qrcodeUrl: ''\r\n  }),\r\n  methods: {\r\n    timeFmt (date) {\r\n      const dateTime = new Date(date)\r\n      const displayTime = `${dateTime.getFullYear()}-${dateTime.getMonth() +\r\n        1}-${dateTime.getDate()}`\r\n      return displayTime\r\n    },\r\n    genQRCodeUrl (work) {\r\n      const url = `/works/preview/${work.id}`\r\n      QRCode.toDataURL(url, (err, url) => {\r\n        if (err) console.log(err)\r\n        this.qrcodeUrl = url\r\n      })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <a-card hoverable >\r\n        <CardCover slot=\"cover\" qrcodeUrl={this.qrcodeUrl} coverImageUrl={this.work.cover_image_url} />\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 编辑 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.edit')}>\r\n            <router-link to={{ name: 'editor', params: { workId: this.work.id } }} target=\"_blank\">\r\n              <a-icon type=\"edit\" title={this.$t('workCard.edit')}/>\r\n            </router-link>\r\n          </a-tooltip>\r\n          {/** 预览 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.preview')}>\r\n            <a-icon type=\"eye\" title={this.$t('workCard.preview')} onClick={this.handleClickPreview} />\r\n          </a-tooltip>\r\n          {\r\n            this.qrcodeUrl\r\n              ? <a-icon type=\"close-circle\" onClick={() => { this.qrcodeUrl = '' }} />\r\n              : <a-icon type=\"qrcode\" onClick={() => this.genQRCodeUrl(this.work)} />\r\n          }\r\n          {/**\r\n          <a-icon type=\"setting\" />\r\n          <a-icon type=\"ellipsis\" />\r\n           */}\r\n        </template>\r\n        <a-card-meta\r\n        >\r\n          <div slot=\"title\" class=\"ant-card-meta-title\" style=\"font-size: 14px;\">\r\n            {this.work.title}({this.work.id})\r\n          </div>\r\n          <div slot=\"description\" style=\"font-size: 12px;\">\r\n            {/** 描述 时间 */}\r\n            <div>{this.$t('workCard.description')}: {this.work.description}</div>\r\n            <div>{this.$t('workCard.createTime')}: {this.timeFmt(this.work.created_at)}</div>\r\n          </div>\r\n        </a-card-meta>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\nconst AddNewCard = {\r\n  functional: true,\r\n  render (h, { props, parent }) {\r\n    return (\r\n      <a-card hoverable>\r\n        <div slot=\"cover\" class=\"flex-center\" style=\"height: 415px;background: #f7f5f557;\" onClick={props.handleCreate}>\r\n          <a-icon type=\"plus\" />\r\n        </div>\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 创建新作品 */}\r\n          {/** https://kazupon.github.io/vue-i18n/guide/component.html#translation-in-functional-component */}\r\n          <span onClick={props.handleCreate}>{parent.$t('workCard.createNewWork')}</span>\r\n        </template>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\nexport default {\r\n  components: {\r\n    ListItemCard,\r\n    AddNewCard\r\n  },\r\n  data: () => ({\r\n    activeWork: null,\r\n    previewVisible: false\r\n  }),\r\n  computed: {\r\n    ...mapState('editor', ['works']),\r\n    ...mapState('loading', ['fetchWorks_loading'])\r\n  },\r\n  methods: {\r\n    ...mapActions('editor', [\r\n      'fetchWorks',\r\n      'createWork'\r\n    ]),\r\n    deleteWork (item) {\r\n      // TODO delete work from work list\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <div class=\"works-wrapper\">\r\n        <a-row gutter={12}>\r\n          <a-col span={6} style=\"margin-bottom: 10px;\">\r\n            <AddNewCard handleCreate={this.createWork} />\r\n          </a-col>\r\n          {\r\n            this.fetchWorks_loading\r\n              ? <a-col span={18} style=\"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\">\r\n                <a-spin tip=\"作品列表获取中...\"/>\r\n              </a-col>\r\n              : this.works.map(work => (\r\n                <a-col span={6} key={work.id} style=\"margin-bottom: 20px;\">\r\n                  <ListItemCard work={work} handleClickPreview={e => {\r\n                    this.previewVisible = true\r\n                    this.activeWork = work\r\n                  }} />\r\n                </a-col>\r\n              ))\r\n          }\r\n        </a-row>\r\n        {\r\n          <PreviewDialog\r\n            work={this.activeWork || {}}\r\n            visible={this.previewVisible}\r\n            handleClose={() => { this.previewVisible = false }}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  },\r\n  created () {\r\n    this.fetchWorks()\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/views/work-manager"}]}