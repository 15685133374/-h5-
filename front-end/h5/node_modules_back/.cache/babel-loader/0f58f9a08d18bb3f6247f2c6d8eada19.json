{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\prop-multi-items-editor\\text.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\prop-multi-items-editor\\text.js","mtime":1575526862272},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nexport default {\n  name: 'lbs-prop-text-enum-editor',\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n    return h(\"div\", [this.innerItems.map(function (item, index) {\n      return h(\"div\", [h(\"a-input\", {\n        \"attrs\": {\n          \"value\": item.value\n        },\n        \"on\": {\n          \"change\": function change(e) {\n            item.value = e.target.value;\n          }\n        },\n        \"style\": {\n          width: '70%'\n        }\n      }), h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"plus-circle\"\n        },\n        \"on\": {\n          \"click\": _this.add\n        },\n        \"class\": \"ml-2\"\n      }), h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"minus-circle\"\n        },\n        \"on\": {\n          \"click\": function click(item, index) {\n            return _this.minus(item, index);\n          }\n        },\n        \"class\": \"ml-1\"\n      })]);\n    })]);\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [{\n          value: 'default',\n          label: 'default'\n        }];\n      }\n    }\n  },\n  computed: {\n    innerItems: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(val) {\n        this.$emit('input', val);\n      }\n    }\n  },\n  methods: {\n    add: function add() {\n      this.$emit('change', [].concat(_toConsumableArray(this.innerItems), [{\n        value: \"\\u9009\\u9879\".concat(this.innerItems.length + 1),\n        label: \"\\u9009\\u9879\".concat(this.innerItems.length + 1, \"-label\")\n      }]));\n    },\n    minus: function minus(item, index) {\n      var items = this.innerItems.slice(0);\n      items.splice(index, 1);\n      this.$emit('change', items);\n    }\n  }\n};",null]}