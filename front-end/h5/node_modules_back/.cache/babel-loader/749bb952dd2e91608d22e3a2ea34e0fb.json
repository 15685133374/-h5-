{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\image-gallery\\components\\uploader.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\image-gallery\\components\\uploader.js","mtime":1575874470551},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    handleClose: {\n      type: Function,\n      default: function _default() {}\n    },\n    uploadSuccess: {\n      type: Function,\n      default: function _default() {}\n    },\n    beforeUpload: {\n      type: Function,\n      default: function _default(file) {\n        return file;\n      }\n    }\n  },\n  computed: {},\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  methods: {\n    handleBeforeUpload: function handleBeforeUpload(file) {\n      return this.beforeUpload(file);\n    },\n    handleChange: function handleChange(info) {\n      this.loading = true;\n      var status = info.file.status;\n\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (status === 'done') {\n        this.loading = false;\n        this.uploadSuccess(info);\n        this.$message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n      } else if (status === 'error') {\n        this.$message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  },\n  render: function render(h) {\n    return h(\"a-upload\", {\n      \"attrs\": {\n        \"name\": \"files\",\n        \"action\": \"/upload\",\n        \"beforeUpload\": this.handleBeforeUpload\n      },\n      \"on\": {\n        \"change\": this.handleChange\n      }\n    }, [h(\"slot\", [h(\"a-button\", [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"upload\"\n      }\n    }), \" \\u70B9\\u51FB\\u4E0A\\u4F20\"])])]);\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["d:/project/luban/luban-h5/front-end/h5/src/components/core/support/image-gallery/components/uploader.js"],"names":["props","visible","type","Boolean","default","handleClose","Function","uploadSuccess","beforeUpload","file","computed","data","loading","methods","handleBeforeUpload","handleChange","info","status","console","log","fileList","$message","success","name","error","render","h","mounted"],"mappings":";AAAA,eAAe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,OADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KADJ;AAKLC,IAAAA,WAAW,EAAE;AACXH,MAAAA,IAAI,EAAEI,QADK;AAEXF,MAAAA,OAAO,EAAE,oBAAM,CAAE;AAFN,KALR;AASLG,IAAAA,aAAa,EAAE;AACbL,MAAAA,IAAI,EAAEI,QADO;AAEbF,MAAAA,OAAO,EAAE,oBAAM,CAAE;AAFJ,KATV;AAaLI,IAAAA,YAAY,EAAE;AACZN,MAAAA,IAAI,EAAEI,QADM;AAEZF,MAAAA,OAAO,EAAE,kBAACK,IAAD;AAAA,eAAUA,IAAV;AAAA;AAFG;AAbT,GADM;AAmBbC,EAAAA,QAAQ,EAAE,EAnBG;AAqBbC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,OAAO,EAAE;AADE,KAAP;AAAA,GArBO;AAwBbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,kBADO,8BACaL,IADb,EACmB;AACxB,aAAO,KAAKD,YAAL,CAAkBC,IAAlB,CAAP;AACD,KAHM;AAIPM,IAAAA,YAJO,wBAIOC,IAJP,EAIa;AAClB,WAAKJ,OAAL,GAAe,IAAf;AACA,UAAMK,MAAM,GAAGD,IAAI,CAACP,IAAL,CAAUQ,MAAzB;;AACA,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACP,IAAjB,EAAuBO,IAAI,CAACI,QAA5B;AACD;;AACD,UAAIH,MAAM,KAAK,MAAf,EAAuB;AACrB,aAAKL,OAAL,GAAe,KAAf;AACA,aAAKL,aAAL,CAAmBS,IAAnB;AACA,aAAKK,QAAL,CAAcC,OAAd,WAAyBN,IAAI,CAACP,IAAL,CAAUc,IAAnC;AACD,OAJD,MAIO,IAAIN,MAAM,KAAK,OAAf,EAAwB;AAC7B,aAAKI,QAAL,CAAcG,KAAd,WAAuBR,IAAI,CAACP,IAAL,CAAUc,IAAjC;AACD;AACF;AAjBM,GAxBI;AA2CbE,EAAAA,MA3Ca,kBA2CLC,CA3CK,EA2CF;AACT;AAAA;AAAA,gBAES,OAFT;AAAA,kBAGW,SAHX;AAAA,wBAIkB,KAAKZ;AAJvB;AAAA;AAAA,kBAKc,KAAKC;AALnB;AAAA;AAAA;AAAA,gBAQqB;AARrB;AAAA;AAaD,GAzDY;AA0DbY,EAAAA,OA1Da,qBA0DF,CACV;AA3DY,CAAf","sourcesContent":["export default {\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    handleClose: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    uploadSuccess: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    beforeUpload: {\r\n      type: Function,\r\n      default: (file) => file\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  data: () => ({\r\n    loading: false\r\n  }),\r\n  methods: {\r\n    handleBeforeUpload (file) {\r\n      return this.beforeUpload(file)\r\n    },\r\n    handleChange (info) {\r\n      this.loading = true\r\n      const status = info.file.status\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList)\r\n      }\r\n      if (status === 'done') {\r\n        this.loading = false\r\n        this.uploadSuccess(info)\r\n        this.$message.success(`${info.file.name} file uploaded successfully.`)\r\n      } else if (status === 'error') {\r\n        this.$message.error(`${info.file.name} file upload failed.`)\r\n      }\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <a-upload\r\n        name=\"files\"\r\n        action=\"/upload\"\r\n        beforeUpload={this.handleBeforeUpload}\r\n        onChange={this.handleChange}>\r\n        <slot>\r\n          <a-button>\r\n            <a-icon type=\"upload\" /> 点击上传\r\n          </a-button>\r\n        </slot>\r\n      </a-upload>\r\n    )\r\n  },\r\n  mounted () {\r\n  }\r\n}\r\n"]}]}