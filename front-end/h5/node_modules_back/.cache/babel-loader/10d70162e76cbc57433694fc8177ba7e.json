{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\page.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\page.js","mtime":1575526862402},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport Page from \"../../components/core/models/page\"; // actions\n\nexport var actions = {\n  setEditingPage: function setEditingPage(_ref) {\n    var commit = _ref.commit;\n    var pageIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    commit('setEditingPage', pageIndex);\n  },\n  pageManager: function pageManager(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('pageManager', payload);\n  }\n}; // mutations\n\nexport var mutations = {\n  setEditingPage: function setEditingPage(state) {\n    var pageIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    state.editingPage = state.work.pages[pageIndex];\n  },\n  pageManager: function pageManager(state, _ref3) {\n    var type = _ref3.type,\n        value = _ref3.value;\n\n    switch (type) {\n      case 'editTitle':\n        var pageIndexForEditingTitle = value.pageIndexForEditingTitle,\n            newTitle = value.newTitle;\n        state.work.pages[pageIndexForEditingTitle].title = newTitle;\n        break;\n\n      case 'add':\n        var page = new Page(value);\n        state.work.pages.push(page);\n        break;\n\n      case 'copy':\n        state.work.pages.push(state.editingPage.clone());\n        break;\n\n      case 'delete':\n        if (state.work.pages.length === 1) return; // #!zh: 作品中至少需要保留一个页面，TODO 需要在页面中提示用户此信息\n\n        var work = state.work,\n            editingPage = state.editingPage;\n        var index = work.pages.findIndex(function (page) {\n          return page.uuid === editingPage.uuid;\n        });\n\n        if (index !== -1) {\n          var newPages = work.pages.slice();\n          newPages.splice(index, 1);\n          state.work.pages = newPages;\n        }\n\n        break;\n\n      default:\n    }\n  }\n};",{"version":3,"sources":["D:/project/luban/luban-h5/front-end/h5/src/store/modules/page.js"],"names":["Page","actions","setEditingPage","commit","pageIndex","pageManager","payload","mutations","state","editingPage","work","pages","type","value","pageIndexForEditingTitle","newTitle","title","page","push","clone","length","index","findIndex","uuid","newPages","slice","splice"],"mappings":";AAAA,OAAOA,IAAP,0C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,cADqB,gCACsB;AAAA,QAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,QAAfC,SAAe,uEAAH,CAAG;AACzCD,IAAAA,MAAM,CAAC,gBAAD,EAAmBC,SAAnB,CAAN;AACD,GAHoB;AAIrBC,EAAAA,WAJqB,8BAIIC,OAJJ,EAIa;AAAA,QAAnBH,MAAmB,SAAnBA,MAAmB;AAChCA,IAAAA,MAAM,CAAC,aAAD,EAAgBG,OAAhB,CAAN;AACD;AANoB,CAAhB,C,CASP;;AACA,OAAO,IAAMC,SAAS,GAAG;AACvBL,EAAAA,cADuB,0BACPM,KADO,EACe;AAAA,QAAfJ,SAAe,uEAAH,CAAG;AACpCI,IAAAA,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBP,SAAjB,CAApB;AACD,GAHsB;AAIvBC,EAAAA,WAJuB,uBAIVG,KAJU,SAIc;AAAA,QAAfI,IAAe,SAAfA,IAAe;AAAA,QAATC,KAAS,SAATA,KAAS;;AACnC,YAAQD,IAAR;AACE,WAAK,WAAL;AAAA,YACUE,wBADV,GACiDD,KADjD,CACUC,wBADV;AAAA,YACoCC,QADpC,GACiDF,KADjD,CACoCE,QADpC;AAEEP,QAAAA,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBG,wBAAjB,EAA2CE,KAA3C,GAAmDD,QAAnD;AACA;;AACF,WAAK,KAAL;AACE,YAAME,IAAI,GAAG,IAAIjB,IAAJ,CAASa,KAAT,CAAb;AACAL,QAAAA,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBO,IAAjB,CAAsBD,IAAtB;AACA;;AACF,WAAK,MAAL;AACET,QAAAA,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBO,IAAjB,CAAsBV,KAAK,CAACC,WAAN,CAAkBU,KAAlB,EAAtB;AACA;;AACF,WAAK,QAAL;AACE,YAAIX,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBS,MAAjB,KAA4B,CAAhC,EAAmC,OADrC,CAC4C;;AAD5C,YAGUV,IAHV,GAGgCF,KAHhC,CAGUE,IAHV;AAAA,YAGgBD,WAHhB,GAGgCD,KAHhC,CAGgBC,WAHhB;AAIE,YAAIY,KAAK,GAAGX,IAAI,CAACC,KAAL,CAAWW,SAAX,CAAqB,UAAAL,IAAI;AAAA,iBAAIA,IAAI,CAACM,IAAL,KAAcd,WAAW,CAACc,IAA9B;AAAA,SAAzB,CAAZ;;AACA,YAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,cAAIG,QAAQ,GAAGd,IAAI,CAACC,KAAL,CAAWc,KAAX,EAAf;AACAD,UAAAA,QAAQ,CAACE,MAAT,CAAgBL,KAAhB,EAAuB,CAAvB;AACAb,UAAAA,KAAK,CAACE,IAAN,CAAWC,KAAX,GAAmBa,QAAnB;AACD;;AACD;;AACF;AAvBF;AAyBD;AA9BsB,CAAlB","sourcesContent":["import Page from '../../components/core/models/page'\r\n\r\n// actions\r\nexport const actions = {\r\n  setEditingPage ({ commit }, pageIndex = 0) {\r\n    commit('setEditingPage', pageIndex)\r\n  },\r\n  pageManager ({ commit }, payload) {\r\n    commit('pageManager', payload)\r\n  }\r\n}\r\n\r\n// mutations\r\nexport const mutations = {\r\n  setEditingPage (state, pageIndex = 0) {\r\n    state.editingPage = state.work.pages[pageIndex]\r\n  },\r\n  pageManager (state, { type, value }) {\r\n    switch (type) {\r\n      case 'editTitle':\r\n        const { pageIndexForEditingTitle, newTitle } = value\r\n        state.work.pages[pageIndexForEditingTitle].title = newTitle\r\n        break\r\n      case 'add':\r\n        const page = new Page(value)\r\n        state.work.pages.push(page)\r\n        break\r\n      case 'copy':\r\n        state.work.pages.push(state.editingPage.clone())\r\n        break\r\n      case 'delete':\r\n        if (state.work.pages.length === 1) return // #!zh: 作品中至少需要保留一个页面，TODO 需要在页面中提示用户此信息\r\n\r\n        const { work, editingPage } = state\r\n        let index = work.pages.findIndex(page => page.uuid === editingPage.uuid)\r\n        if (index !== -1) {\r\n          let newPages = work.pages.slice()\r\n          newPages.splice(index, 1)\r\n          state.work.pages = newPages\r\n        }\r\n        break\r\n      default:\r\n    }\r\n  }\r\n}\r\n"]}]}