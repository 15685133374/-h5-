{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-background.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-background.js","mtime":1575702580836},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default {\n  name: 'lbp-background',\n  render: function render() {\n    var h = arguments[0];\n    var style = {\n      width: '100%',\n      height: '100%'\n    };\n\n    if (this.imgSrc) {\n      style = _objectSpread({}, style, {\n        'background-size': 'cover',\n        'background-position': '50% 50%',\n        'background-origin': 'content-box',\n        'background-image': \"url(\".concat(this.imgSrc, \")\")\n      });\n    } else {\n      style = _objectSpread({}, style, {\n        backgroundColor: this.backgroundColor\n      });\n    }\n\n    return h(\"div\", {\n      \"style\": \"width: 100%; height: 100%; overflow: hidden; position: absolute; z-index: -1; opacity: 1;\"\n    }, [h(\"div\", {\n      \"style\": style\n    })]);\n  },\n  props: {\n    imgSrc: {\n      type: String,\n      default: '',\n      editor: {\n        type: 'lbs-image-gallery',\n        label: '图片url',\n        prop: {\n          type: 'textarea'\n        }\n      }\n    },\n    backgroundColor: {\n      type: String,\n      // Q: 为什么 transparent 无效？\n      // A: 注意，根据 MDN 文档，颜色选择器的 value 只能是：# + 6个16进制字符串\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color#Value\n      // The value of an <input> element of type color is always a DOMString which contains a 7-character string specifying an RGB color in hexadecimal format.\n      default: '#ffffff',\n      editor: {\n        type: 'a-input',\n        // lbs-color-picker\n        label: '背景颜色',\n        prop: {\n          type: 'color'\n        },\n        require: true\n      }\n    }\n  }\n};",{"version":3,"sources":["d:/project/luban/luban-h5/front-end/h5/src/components/plugins/lbp-background.js"],"names":["name","render","style","width","height","imgSrc","backgroundColor","props","type","String","default","editor","label","prop","require"],"mappings":";;;;;;;;;AAAA,eAAe;AACbA,EAAAA,IAAI,EAAE,gBADO;AAEbC,EAAAA,MAFa,oBAEH;AAAA;AACR,QAAIC,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,MADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KAAZ;;AAKA,QAAI,KAAKC,MAAT,EAAiB;AACfH,MAAAA,KAAK,qBACAA,KADA;AAEH,2BAAmB,OAFhB;AAGH,+BAAuB,SAHpB;AAIH,6BAAqB,aAJlB;AAKH,0CAA2B,KAAKG,MAAhC;AALG,QAAL;AAOD,KARD,MAQO;AACLH,MAAAA,KAAK,qBACAA,KADA;AAEHI,QAAAA,eAAe,EAAE,KAAKA;AAFnB,QAAL;AAID;;AAED;AAAA,eACa;AADb;AAAA,eAEgBJ;AAFhB;AAKD,GA5BY;AA6BbK,EAAAA,KAAK,EAAE;AACLF,IAAAA,MAAM,EAAE;AACNG,MAAAA,IAAI,EAAEC,MADA;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,MAAM,EAAE;AACNH,QAAAA,IAAI,EAAE,mBADA;AAENI,QAAAA,KAAK,EAAE,OAFD;AAGNC,QAAAA,IAAI,EAAE;AACJL,UAAAA,IAAI,EAAE;AADF;AAHA;AAHF,KADH;AAYLF,IAAAA,eAAe,EAAE;AACfE,MAAAA,IAAI,EAAEC,MADS;AAEf;AACA;AACA;AACA;AAEAC,MAAAA,OAAO,EAAE,SAPM;AAQfC,MAAAA,MAAM,EAAE;AACNH,QAAAA,IAAI,EAAE,SADA;AACW;AACjBI,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,IAAI,EAAE;AACJL,UAAAA,IAAI,EAAE;AADF,SAHA;AAMNM,QAAAA,OAAO,EAAE;AANH;AARO;AAZZ;AA7BM,CAAf","sourcesContent":["export default {\n  name: 'lbp-background',\n  render () {\n    let style = {\n      width: '100%',\n      height: '100%'\n    }\n\n    if (this.imgSrc) {\n      style = {\n        ...style,\n        'background-size': 'cover',\n        'background-position': '50% 50%',\n        'background-origin': 'content-box',\n        'background-image': `url(${this.imgSrc})`\n      }\n    } else {\n      style = {\n        ...style,\n        backgroundColor: this.backgroundColor\n      }\n    }\n\n    return (\n      <div style=\"width: 100%; height: 100%; overflow: hidden; position: absolute; z-index: -1; opacity: 1;\">\n        <div style={style}></div>\n      </div>\n    )\n  },\n  props: {\n    imgSrc: {\n      type: String,\n      default: '',\n      editor: {\n        type: 'lbs-image-gallery',\n        label: '图片url',\n        prop: {\n          type: 'textarea'\n        }\n      }\n    },\n    backgroundColor: {\n      type: String,\n      // Q: 为什么 transparent 无效？\n      // A: 注意，根据 MDN 文档，颜色选择器的 value 只能是：# + 6个16进制字符串\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/color#Value\n      // The value of an <input> element of type color is always a DOMString which contains a 7-character string specifying an RGB color in hexadecimal format.\n\n      default: '#ffffff',\n      editor: {\n        type: 'a-input', // lbs-color-picker\n        label: '背景颜色',\n        prop: {\n          type: 'color'\n        },\n        require: true\n      }\n    }\n  }\n}\n"]}]}