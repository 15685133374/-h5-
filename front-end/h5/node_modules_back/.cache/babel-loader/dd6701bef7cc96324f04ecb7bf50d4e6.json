{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-input.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-input.js","mtime":1575526862292},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport commonProps from \"./common/props.js\";\nexport default {\n  name: 'lbp-form-input',\n  render: function render(h) {\n    var style = {\n      color: this.color,\n      textAlign: this.textAlign,\n      backgroundColor: this.backgroundColor,\n      fontSize: this.fontSize + 'px',\n      lineHeight: this.lineHeight + 'em',\n      borderColor: this.borderColor,\n      borderRadius: this.borderRadius + 'px',\n      borderWidth: this.borderWidth + 'px',\n      padding: '0 5px'\n    };\n    return h(\"input\", {\n      \"attrs\": {\n        \"disabled\": this.disabled,\n        \"type\": this.type,\n        \"name\": this.name,\n        \"placeholder\": this.placeholder,\n        \"autocomplete\": \"off\",\n        \"data-type\": \"lbp-form-input\"\n      },\n      \"style\": style\n    });\n  },\n  props: {\n    name: {\n      type: String,\n      default: function _default() {\n        return 'name';\n      }\n    },\n    type: {\n      type: String,\n      default: 'text',\n      editor: {\n        type: 'lbs-select-input-type',\n        label: '类型'\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // type: commonProps.type,\n    placeholder: commonProps.placeholder('姓名'),\n    fontSize: commonProps.fontSize,\n    color: commonProps.color,\n    backgroundColor: commonProps.backgroundColor,\n    borderColor: commonProps.borderColor,\n    borderWidth: commonProps.borderWidth,\n    borderRadius: commonProps.borderRadius,\n    lineHeight: commonProps.lineHeight,\n    textAlign: commonProps.textAlign({\n      defaultValue: 'left'\n    })\n  },\n  editorConfig: {\n    components: {\n      'lbs-select-input-type': {\n        props: ['value'],\n        computed: {\n          value_: {\n            get: function get() {\n              return this.value;\n            },\n            set: function set(val) {\n              this.$emit('input', val);\n            }\n          }\n        },\n        render: function render(h) {\n          var _this = this;\n\n          return h(\"a-select\", {\n            \"attrs\": {\n              \"placeholder\": \"类型\",\n              \"value\": this.value\n            },\n            \"on\": {\n              \"change\": function change(value) {\n                _this.$emit('input', value);\n\n                _this.$emit('change', value);\n              }\n            }\n          }, [this.options.map(function (option) {\n            return h(\"a-select-option\", {\n              \"key\": option.value,\n              \"attrs\": {\n                \"value\": option.value\n              }\n            }, [option.label]);\n          })]);\n        },\n        data: function data() {\n          return {\n            options: [{\n              label: '文字',\n              value: 'text'\n            }, {\n              label: '密码',\n              value: 'password'\n            }, {\n              label: '日期',\n              value: 'date'\n            }, {\n              label: '邮箱',\n              value: 'email'\n            }, {\n              label: '手机号',\n              value: 'tel'\n            }]\n          };\n        }\n      }\n    }\n  }\n}; // .lb-plugin__input {\n//   display: block;\n//   margin: 0;\n//   padding: 0 5px;\n//   box-sizing: border-box;\n//   overflow: visible;\n//   border: 1px solid #ced4da;\n//   &:focus {\n//     outline: none;\n//   }\n// }",{"version":3,"sources":["D:/project/luban/luban-h5/front-end/h5/src/components/plugins/lbp-form-input.js"],"names":["commonProps","name","render","h","style","color","textAlign","backgroundColor","fontSize","lineHeight","borderColor","borderRadius","borderWidth","padding","disabled","type","placeholder","props","String","default","editor","label","Boolean","defaultValue","editorConfig","components","computed","value_","get","value","set","val","$emit","options","map","option","data"],"mappings":"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","sourcesContent":["import commonProps from './common/props.js'\r\n\r\nexport default {\r\n  name: 'lbp-form-input',\r\n  render (h) {\r\n    const style = {\r\n      color: this.color,\r\n      textAlign: this.textAlign,\r\n      backgroundColor: this.backgroundColor,\r\n      fontSize: this.fontSize + 'px',\r\n      lineHeight: this.lineHeight + 'em',\r\n      borderColor: this.borderColor,\r\n      borderRadius: this.borderRadius + 'px',\r\n      borderWidth: this.borderWidth + 'px',\r\n      padding: '0 5px'\r\n    }\r\n    return <input\r\n      disabled={this.disabled}\r\n      type={this.type}\r\n      style={style}\r\n      name={this.name}\r\n      placeholder={this.placeholder}\r\n      autocomplete=\"off\"\r\n      data-type=\"lbp-form-input\" // 点击[表单提交]按钮的时候,找到data-type为:lbp-form-input 的输入框，并将其值添加到formData,提交到后台\r\n    />\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      default () {\r\n        return 'name'\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      editor: {\r\n        type: 'lbs-select-input-type',\r\n        label: '类型'\r\n      }\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // type: commonProps.type,\r\n    placeholder: commonProps.placeholder('姓名'),\r\n    fontSize: commonProps.fontSize,\r\n    color: commonProps.color,\r\n    backgroundColor: commonProps.backgroundColor,\r\n    borderColor: commonProps.borderColor,\r\n    borderWidth: commonProps.borderWidth,\r\n    borderRadius: commonProps.borderRadius,\r\n    lineHeight: commonProps.lineHeight,\r\n    textAlign: commonProps.textAlign({ defaultValue: 'left' })\r\n  },\r\n  editorConfig: {\r\n    components: {\r\n      'lbs-select-input-type': {\r\n        props: ['value'],\r\n        computed: {\r\n          value_: {\r\n            get () {\r\n              return this.value\r\n            },\r\n            set (val) {\r\n              this.$emit('input', val)\r\n            }\r\n          }\r\n        },\r\n        render (h) {\r\n          return (\r\n            <a-select\r\n              placeholder=\"类型\"\r\n              value={this.value}\r\n              onChange={(value) => {\r\n                this.$emit('input', value)\r\n                this.$emit('change', value)\r\n              }}\r\n            >\r\n              {\r\n                this.options.map(option => (\r\n                  <a-select-option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >{option.label}</a-select-option>\r\n                ))\r\n              }\r\n            </a-select>\r\n          )\r\n        },\r\n        data: () => ({\r\n          options: [\r\n            {\r\n              label: '文字',\r\n              value: 'text'\r\n            },\r\n            {\r\n              label: '密码',\r\n              value: 'password'\r\n            },\r\n            {\r\n              label: '日期',\r\n              value: 'date'\r\n            },\r\n            {\r\n              label: '邮箱',\r\n              value: 'email'\r\n            },\r\n            {\r\n              label: '手机号',\r\n              value: 'tel'\r\n            }\r\n          ]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// .lb-plugin__input {\r\n//   display: block;\r\n//   margin: 0;\r\n//   padding: 0 5px;\r\n//   box-sizing: border-box;\r\n//   overflow: visible;\r\n//   border: 1px solid #ced4da;\r\n//   &:focus {\r\n//     outline: none;\r\n//   }\r\n// }\r\n"]}]}