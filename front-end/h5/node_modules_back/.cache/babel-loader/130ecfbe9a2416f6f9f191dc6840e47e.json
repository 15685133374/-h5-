{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\canvas\\edit.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\canvas\\edit.js","mtime":1575526862122},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState, mapActions } from 'vuex';\nimport Shape from \"../../support/shape\";\nimport ContextMenu from \"../../support/contexmenu\";\nexport default {\n  props: ['elements', 'handleClickElementProp', 'handleClickCanvasProp'],\n  data: function data() {\n    return {\n      vLines: [],\n      hLines: [],\n      contextmenuPos: []\n    };\n  },\n  computed: _objectSpread({}, mapState('editor', ['editingElement'])),\n  methods: _objectSpread({}, mapActions('editor', ['setEditingElement', 'setElementPosition', 'setElementShape', 'recordElementRect', 'elementManager']), {\n    // TODO #!zh: 优化代码\n    // generate vertical line\n    drawVLine: function drawVLine(newLeft) {\n      // this.editingElement.commonStyle.left = newLeft\n      this.setElementPosition({\n        left: newLeft\n      });\n      this.vLines = [{\n        left: newLeft\n      }];\n    },\n    // generate horizontal line\n    drawHLine: function drawHLine(newTop) {\n      // this.editingElement.commonStyle.top = newTop\n      this.setElementPosition({\n        top: newTop\n      });\n      this.hLines = [{\n        top: newTop\n      }];\n    },\n    calcX: function calcX(newLeft) {\n      var _this = this;\n\n      var uuid = this.editingElement.uuid;\n      var xCoords = [];\n      this.elements.filter(function (e) {\n        return e.uuid !== uuid;\n      }).forEach(function (e) {\n        var width = e.commonStyle.width;\n        var left = e.commonStyle.left;\n        xCoords = [].concat(_toConsumableArray(xCoords), [left, left + width / 2, left + width]);\n      });\n      xCoords.some(function (x) {\n        if (Math.abs(newLeft - x) <= 5) {\n          _this.drawVLine(x);\n\n          return true;\n        } else {\n          _this.vLines = [];\n        }\n      });\n    },\n    calcY: function calcY(newTop) {\n      var _this2 = this;\n\n      var uuid = this.editingElement.uuid;\n      var yCoords = [];\n      this.elements.filter(function (e) {\n        return e.uuid !== uuid;\n      }).forEach(function (e) {\n        var height = e.commonStyle.height;\n        var top = e.commonStyle.top;\n        yCoords = [].concat(_toConsumableArray(yCoords), [top, top + height / 2, top + height]);\n      });\n      yCoords.some(function (y) {\n        if (Math.abs(newTop - y) <= 5) {\n          _this2.drawHLine(y);\n\n          return true;\n        } else {\n          _this2.hLines = [];\n        }\n      });\n    },\n\n    /**\r\n     * #!zh: 在元素移动过程中，计算和生成辅助线\r\n     */\n    handleElementMove: function handleElementMove(pos) {\n      this.setElementPosition(pos);\n      this.calcX(pos.left);\n      this.calcY(pos.top);\n    },\n    handlePointMove: function handlePointMove(_ref) {\n      var top = _ref.top,\n          left = _ref.left;\n      this.calcX(left);\n      this.calcY(top);\n    },\n    bindContextMenu: function bindContextMenu(e) {\n      // 优化右击菜单的显示，去除冗余的无效逻辑\n      var _this$$el$getBounding = this.$el.getBoundingClientRect(),\n          x = _this$$el$getBounding.x,\n          y = _this$$el$getBounding.y;\n\n      this.contextmenuPos = [e.clientX - x, e.clientY - y]; // console.log(e.target)\n      // console.log(e.target.classList)\n      // // e.preventDefault() // 不显示默认的右击菜单\n      // if (\n      //   e.target.classList.contains('element-on-edit-canvas') ||\n      //   e.target.parentElement.classList.contains('element-on-edit-canvas')\n      // ) {\n      //   const { x, y } = this.$el.getBoundingClientRect()\n      //   console.log(x, y)\n      //   this.contextmenuPos = [e.clientX - x, e.clientY - y]\n      // } else {\n      //   this.hideContextMenu()\n      // }\n    },\n    hideContextMenu: function hideContextMenu() {\n      this.contextmenuPos = [];\n    },\n    handleClickCanvas: function handleClickCanvas(e) {\n      if (!e.target.classList.contains('element-on-edit-canvas')) {\n        this.setEditingElement();\n      }\n    },\n\n    /**\r\n     * #!zh: renderCanvas 渲染中间画布\r\n     * elements\r\n     * @param {*} h\r\n     * @param {*} elements\r\n     * @returns\r\n     */\n    renderCanvas: function renderCanvas(h, elements) {\n      var _this3 = this;\n\n      return h(\"div\", {\n        \"style\": {\n          height: '100%',\n          position: 'relative'\n        },\n        \"on\": {\n          \"click\": function click(e) {\n            _this3.hideContextMenu();\n\n            _this3.handleClickCanvas(e);\n          },\n          \"contextmenu\": function contextmenu(e) {\n            e.preventDefault();\n            e.stopPropagation(); // this.bindContextMenu(e)\n          }\n        }\n      }, [elements.map(function (element, index) {\n        if (element.name === 'lbp-background') {\n          return h('lbp-background', {\n            props: element.getProps()\n          });\n        }\n\n        var data = {\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          // 添加 class 的原因：与 handleClickCanvasProp 配合,\n          // 当点击编辑画布上的其它区域（clickEvent.target.classList 不包含下面的 className）的时候，设置 editingElement=null\n          class: 'element-on-edit-canvas',\n          props: _objectSpread({}, element.getProps(), {\n            // #6 #3,\n            editorMode: 'edit'\n          }),\n          // nativeOn: {\n          //   contextmenu: e => {\n          //     this.bindContextMenu(e)\n          //   }\n          // },\n          on: {\n            // 高亮当前点击的元素\n            // click: () => this.setEditingElement(element)\n            input: function input(_ref2) {\n              var value = _ref2.value,\n                  pluginName = _ref2.pluginName;\n\n              if (pluginName === 'lbp-text') {\n                element.pluginProps.text = value;\n              }\n            }\n          }\n        };\n        return h(Shape, {\n          \"style\": element.getStyle({\n            position: 'absolute'\n          }),\n          \"attrs\": {\n            \"defaultPosition\": element.commonStyle,\n            \"element\": element,\n            \"active\": _this3.editingElement === element,\n            \"handleMousedownProp\": function handleMousedownProp() {\n              // 在 shape 上面添加 mousedown，而非 plugin 本身添加 onClick 的原因：\n              // 在 mousedown 的时候，即可激活 editingElement(当前选中元素)\n              // 这样，就不用等到鼠标抬起的时候，也就是 plugin 的 onClick 生效的时候，才给选中的元素添加边框等选中效果\n              _this3.setEditingElement(element);\n            },\n            \"handlePointMoveProp\": function handlePointMoveProp(pos) {\n              _this3.setElementPosition(pos);\n            },\n            \"handleElementMoveProp\": _this3.handleElementMove,\n            \"handleElementMouseUpProp\": function handleElementMouseUpProp() {\n              _this3.recordElementRect();\n            },\n            \"handlePointMouseUpProp\": function handlePointMouseUpProp() {\n              _this3.recordElementRect();\n            }\n          },\n          \"nativeOn\": {\n            \"contextmenu\": function contextmenu(e) {\n              _this3.bindContextMenu(e);\n            }\n          }\n        }, [h(element.name, data)]);\n      }), this.vLines.map(function (line) {\n        return h(\"div\", {\n          \"class\": \"v-line\",\n          \"style\": {\n            left: \"\".concat(line.left, \"px\")\n          }\n        });\n      }), this.hLines.map(function (line) {\n        return h(\"div\", {\n          \"class\": \"h-line\",\n          \"style\": {\n            top: \"\".concat(line.top, \"px\")\n          }\n        });\n      }), this.contextmenuPos.length && h(ContextMenu, {\n        \"attrs\": {\n          \"position\": this.contextmenuPos\n        },\n        \"on\": {\n          \"select\": function select(_ref3) {\n            var item = _ref3.item,\n                key = _ref3.key,\n                selectedKeys = _ref3.selectedKeys;\n\n            _this3.elementManager({\n              type: key\n            });\n\n            _this3.hideContextMenu();\n          },\n          \"hideMenu\": this.hideContextMenu\n        }\n      })]);\n    }\n  }),\n  render: function render(h) {\n    return this.renderCanvas(h, this.elements);\n  }\n};",{"version":3,"sources":["D:/project/luban/luban-h5/front-end/h5/src/components/core/editor/canvas/edit.js"],"names":["mapState","mapActions","Shape","ContextMenu","props","data","vLines","hLines","contextmenuPos","computed","methods","drawVLine","newLeft","setElementPosition","left","drawHLine","newTop","top","calcX","uuid","editingElement","xCoords","elements","filter","e","forEach","width","commonStyle","some","x","Math","abs","calcY","yCoords","height","y","handleElementMove","pos","handlePointMove","bindContextMenu","$el","getBoundingClientRect","clientX","clientY","hideContextMenu","handleClickCanvas","target","classList","contains","setEditingElement","renderCanvas","h","position","preventDefault","stopPropagation","map","element","index","name","getProps","style","class","editorMode","on","input","value","pluginName","pluginProps","text","getStyle","recordElementRect","line","length","item","key","selectedKeys","elementManager","type","render"],"mappings":"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","sourcesContent":["import { mapState, mapActions } from 'vuex'\r\nimport Shape from '../../support/shape'\r\nimport ContextMenu from '../../support/contexmenu'\r\n\r\nexport default {\r\n  props: ['elements', 'handleClickElementProp', 'handleClickCanvasProp'],\r\n  data: () => ({\r\n    vLines: [],\r\n    hLines: [],\r\n    contextmenuPos: []\r\n  }),\r\n  computed: {\r\n    ...mapState('editor', ['editingElement'])\r\n  },\r\n  methods: {\r\n    ...mapActions('editor', [\r\n      'setEditingElement',\r\n      'setElementPosition',\r\n      'setElementShape',\r\n      'recordElementRect',\r\n      'elementManager'\r\n    ]),\r\n    // TODO #!zh: 优化代码\r\n    // generate vertical line\r\n    drawVLine (newLeft) {\r\n      // this.editingElement.commonStyle.left = newLeft\r\n      this.setElementPosition({ left: newLeft })\r\n      this.vLines = [{ left: newLeft }]\r\n    },\r\n    // generate horizontal line\r\n    drawHLine (newTop) {\r\n      // this.editingElement.commonStyle.top = newTop\r\n      this.setElementPosition({ top: newTop })\r\n      this.hLines = [{ top: newTop }]\r\n    },\r\n    calcX (newLeft) {\r\n      const uuid = this.editingElement.uuid\r\n      let xCoords = []\r\n      this.elements.filter(e => e.uuid !== uuid).forEach(e => {\r\n        const width = e.commonStyle.width\r\n        const left = e.commonStyle.left\r\n        xCoords = [\r\n          ...xCoords,\r\n          left,\r\n          left + (width / 2),\r\n          left + width\r\n        ]\r\n      })\r\n\r\n      xCoords.some(x => {\r\n        if (Math.abs(newLeft - x) <= 5) {\r\n          this.drawVLine(x)\r\n          return true\r\n        } else {\r\n          this.vLines = []\r\n        }\r\n      })\r\n    },\r\n    calcY (newTop) {\r\n      const uuid = this.editingElement.uuid\r\n      let yCoords = []\r\n      this.elements.filter(e => e.uuid !== uuid).forEach(e => {\r\n        const height = e.commonStyle.height\r\n        const top = e.commonStyle.top\r\n        yCoords = [\r\n          ...yCoords,\r\n          top,\r\n          top + (height / 2),\r\n          top + height\r\n        ]\r\n      })\r\n\r\n      yCoords.some(y => {\r\n        if (Math.abs(newTop - y) <= 5) {\r\n          this.drawHLine(y)\r\n          return true\r\n        } else {\r\n          this.hLines = []\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * #!zh: 在元素移动过程中，计算和生成辅助线\r\n     */\r\n    handleElementMove (pos) {\r\n      this.setElementPosition(pos)\r\n      this.calcX(pos.left)\r\n      this.calcY(pos.top)\r\n    },\r\n    handlePointMove ({ top, left }) {\r\n      this.calcX(left)\r\n      this.calcY(top)\r\n    },\r\n    bindContextMenu (e) {\r\n      // 优化右击菜单的显示，去除冗余的无效逻辑\r\n      const { x, y } = this.$el.getBoundingClientRect()\r\n      this.contextmenuPos = [e.clientX - x, e.clientY - y]\r\n      // console.log(e.target)\r\n      // console.log(e.target.classList)\r\n      // // e.preventDefault() // 不显示默认的右击菜单\r\n      // if (\r\n      //   e.target.classList.contains('element-on-edit-canvas') ||\r\n      //   e.target.parentElement.classList.contains('element-on-edit-canvas')\r\n      // ) {\r\n      //   const { x, y } = this.$el.getBoundingClientRect()\r\n      //   console.log(x, y)\r\n      //   this.contextmenuPos = [e.clientX - x, e.clientY - y]\r\n      // } else {\r\n      //   this.hideContextMenu()\r\n      // }\r\n    },\r\n    hideContextMenu () {\r\n      this.contextmenuPos = []\r\n    },\r\n    handleClickCanvas (e) {\r\n      if (!e.target.classList.contains('element-on-edit-canvas')) {\r\n        this.setEditingElement()\r\n      }\r\n    },\r\n    /**\r\n     * #!zh: renderCanvas 渲染中间画布\r\n     * elements\r\n     * @param {*} h\r\n     * @param {*} elements\r\n     * @returns\r\n     */\r\n    renderCanvas (h, elements) {\r\n      return (\r\n        <div\r\n          style={{ height: '100%', position: 'relative' }}\r\n          onClick={(e) => {\r\n            this.hideContextMenu()\r\n            this.handleClickCanvas(e)\r\n          }}\r\n          onContextmenu={e => {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            // this.bindContextMenu(e)\r\n          }}\r\n        >\r\n          {\r\n            elements.map((element, index) => {\r\n              if (element.name === 'lbp-background') {\r\n                return h('lbp-background', {\r\n                  props: element.getProps()\r\n                })\r\n              }\r\n              const data = {\r\n                style: {\r\n                  width: '100%',\r\n                  height: '100%'\r\n                },\r\n                // 添加 class 的原因：与 handleClickCanvasProp 配合,\r\n                // 当点击编辑画布上的其它区域（clickEvent.target.classList 不包含下面的 className）的时候，设置 editingElement=null\r\n                class: 'element-on-edit-canvas',\r\n                props: {\r\n                  ...element.getProps(), // #6 #3,\r\n                  editorMode: 'edit'\r\n                },\r\n                // nativeOn: {\r\n                //   contextmenu: e => {\r\n                //     this.bindContextMenu(e)\r\n                //   }\r\n                // },\r\n                on: {\r\n                  // 高亮当前点击的元素\r\n                  // click: () => this.setEditingElement(element)\r\n                  input: ({ value, pluginName }) => {\r\n                    if (pluginName === 'lbp-text') {\r\n                      element.pluginProps.text = value\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              return (\r\n                <Shape\r\n                  style={element.getStyle({ position: 'absolute' })}\r\n                  defaultPosition={element.commonStyle} // {top, left}\r\n                  element={element}\r\n                  active={this.editingElement === element}\r\n                  handleMousedownProp={() => {\r\n                    // 在 shape 上面添加 mousedown，而非 plugin 本身添加 onClick 的原因：\r\n                    // 在 mousedown 的时候，即可激活 editingElement(当前选中元素)\r\n                    // 这样，就不用等到鼠标抬起的时候，也就是 plugin 的 onClick 生效的时候，才给选中的元素添加边框等选中效果\r\n                    this.setEditingElement(element)\r\n                  }}\r\n                  // TODO 矩形四周的点叫什么？暂时叫 Point 吧\r\n                  handlePointMoveProp={pos => {\r\n                    this.setElementPosition(pos)\r\n                  }}\r\n                  handleElementMoveProp={this.handleElementMove}\r\n                  handleElementMouseUpProp={() => {\r\n                    this.recordElementRect()\r\n                  }}\r\n                  handlePointMouseUpProp={() => {\r\n                    this.recordElementRect()\r\n                  }}\r\n                  nativeOnContextmenu={e => {\r\n                    this.bindContextMenu(e)\r\n                  }}\r\n                >\r\n                  {h(element.name, data)}\r\n                </Shape>\r\n              )\r\n            })\r\n          }\r\n          {\r\n            this.vLines.map(line => (\r\n              <div class=\"v-line\" style={{ left: `${line.left}px` }}></div>\r\n            ))\r\n          }\r\n          {\r\n            this.hLines.map(line => (\r\n              <div class=\"h-line\" style={{ top: `${line.top}px` }}></div>\r\n            ))\r\n          }\r\n          {\r\n            this.contextmenuPos.length &&\r\n            <ContextMenu\r\n              position={this.contextmenuPos}\r\n              onSelect={({ item, key, selectedKeys }) => {\r\n                this.elementManager({ type: key })\r\n                this.hideContextMenu()\r\n              }}\r\n              onHideMenu={this.hideContextMenu}\r\n            />\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  },\r\n  render (h) {\r\n    return this.renderCanvas(h, this.elements)\r\n  }\r\n}\r\n"]}]}