{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\plugins\\undo-redo\\History.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\plugins\\undo-redo\\History.js","mtime":1575526862422},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import _classCallCheck from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport { cloneDeep } from 'lodash';\n\nvar UndoRedoHistory =\n/*#__PURE__*/\nfunction () {\n  function UndoRedoHistory() {\n    _classCallCheck(this, UndoRedoHistory);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _defineProperty(this, \"history\", []);\n\n    _defineProperty(this, \"currentIndex\", -1);\n  }\n\n  _createClass(UndoRedoHistory, [{\n    key: \"init\",\n    value: function init(store) {\n      this.store = store;\n    }\n  }, {\n    key: \"addState\",\n    value: function addState(state) {\n      // may be we have to remove redo steps\n      if (this.currentIndex + 1 < this.history.length) {\n        this.history.splice(this.currentIndex + 1);\n      }\n\n      this.history.push(state);\n      this.currentIndex++;\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      if (!this.canUndo) return;\n      var prevState = this.history[this.currentIndex - 1]; // take a copy of the history state\n      // because it would be changed during store mutations\n      // what would corrupt the undo-redo-history\n      // (same on redo)\n\n      this.store.replaceState(cloneDeep(prevState));\n      this.currentIndex--;\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      if (!this.canRedo) return;\n      var nextState = this.history[this.currentIndex + 1];\n      this.store.replaceState(cloneDeep(nextState));\n      this.currentIndex++;\n    }\n  }, {\n    key: \"canUndo\",\n    get: function get() {\n      return this.currentIndex > 0;\n    }\n  }, {\n    key: \"canRedo\",\n    get: function get() {\n      return this.history.length > this.currentIndex + 1;\n    }\n  }]);\n\n  return UndoRedoHistory;\n}();\n\nvar undoRedoHistory = new UndoRedoHistory();\nexport default undoRedoHistory;",null]}