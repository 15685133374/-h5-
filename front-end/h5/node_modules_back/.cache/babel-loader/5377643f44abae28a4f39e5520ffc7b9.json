{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-button.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-button.js","mtime":1575526862292},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport commonProps from \"./common/props.js\";\nexport default {\n  render: function render() {\n    var h = arguments[0];\n    var color = this.color,\n        textAlign = this.textAlign,\n        backgroundColor = this.backgroundColor,\n        fontSize = this.fontSize,\n        lineHeight = this.lineHeight,\n        borderColor = this.borderColor,\n        borderRadius = this.borderRadius,\n        borderWidth = this.borderWidth,\n        text = this.text,\n        disabled = this.disabled;\n    var style = {\n      color: color,\n      textAlign: textAlign,\n      backgroundColor: backgroundColor,\n      fontSize: fontSize,\n      lineHeight: lineHeight + 'em',\n      borderColor: borderColor,\n      borderRadius: borderRadius + 'px',\n      borderWidth: borderWidth + 'px',\n      textDecoration: 'none',\n      disabled: disabled\n    };\n    return h(\"button\", {\n      \"style\": style,\n      \"on\": {\n        \"click\": this.handleClick\n      }\n    }, [text]);\n  },\n  name: 'lbp-form-button',\n  props: {\n    text: commonProps.text(),\n    vertical: commonProps.vertical,\n    backgroundColor: commonProps.backgroundColor,\n    color: commonProps.color,\n    fontSize: commonProps.fontSize,\n    lineHeight: commonProps.lineHeight,\n    borderWidth: commonProps.borderWidth,\n    borderRadius: commonProps.borderRadius,\n    borderColor: commonProps.borderColor,\n    textAlign: commonProps.textAlign()\n  },\n  methods: {\n    handleClick: function handleClick() {\n      if (this.disabled) return; // #!zh: data-type=lbp-form-input 在 lbp-form-input 组件中定义\n\n      var inputs = document.querySelectorAll(\"[data-type^='lbp-form-input']\");\n      if (!inputs.length) return;\n      var self = this;\n      var formData = new FormData();\n      inputs.forEach(function (input) {\n        return formData.append(input.dataset.uuid, input.value);\n      });\n      var req = new XMLHttpRequest();\n\n      req.onreadystatechange = function () {\n        if (req.readyState === 4) {\n          var message = req.status === 200 ? '提交成功' : '提交失败';\n          self.$message.info(message);\n        }\n      }; // #!zh: vuex.module.editor.setWork 中定义\n\n\n      var workId = window.__work.id; // TODO #!zh: 可以动态配置表单提交地址\n\n      req.open('post', \"/works/form/submit/\".concat(workId), true);\n      req.send(formData);\n    }\n  },\n  editorConfig: {\n    components: {\n      'lbs-select-input-type': {\n        props: ['value'],\n        computed: {\n          value_: {\n            get: function get() {\n              return this.value;\n            },\n            set: function set(val) {\n              this.$emit('input', val);\n            }\n          }\n        },\n        template: \"\\n          <a-select v-model=\\\"value_\\\" placeholder=\\\"\\u7C7B\\u578B\\\">\\n            <a-option\\n              v-for=\\\"item in options\\\"\\n              :key=\\\"item.value\\\"\\n              :label=\\\"item.label\\\"\\n              :value=\\\"item.value\\\">\\n            </a-option>\\n          </a-select>\\n        \",\n        data: function data() {\n          return {\n            options: [{\n              label: '文字',\n              value: 'text'\n            }, {\n              label: '密码',\n              value: 'password'\n            }, {\n              label: '日期',\n              value: 'date'\n            }, {\n              label: '邮箱',\n              value: 'email'\n            }, {\n              label: '手机号',\n              value: 'tel'\n            }]\n          };\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["D:/project/luban/luban-h5/front-end/h5/src/components/plugins/lbp-form-button.js"],"names":["commonProps","render","color","textAlign","backgroundColor","fontSize","lineHeight","borderColor","borderRadius","borderWidth","text","disabled","style","textDecoration","handleClick","name","props","vertical","methods","inputs","document","querySelectorAll","length","self","formData","FormData","forEach","input","append","dataset","uuid","value","req","XMLHttpRequest","onreadystatechange","readyState","message","status","$message","info","workId","window","__work","id","open","send","editorConfig","components","computed","value_","get","set","val","$emit","template","data","options","label"],"mappings":"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","sourcesContent":["import commonProps from './common/props.js'\r\n\r\nexport default {\r\n  render () {\r\n    const {\r\n      color,\r\n      textAlign,\r\n      backgroundColor,\r\n      fontSize,\r\n      lineHeight,\r\n      borderColor,\r\n      borderRadius,\r\n      borderWidth,\r\n      text,\r\n      disabled\r\n    } = this\r\n\r\n    const style = {\r\n      color,\r\n      textAlign,\r\n      backgroundColor,\r\n      fontSize: fontSize,\r\n      lineHeight: lineHeight + 'em',\r\n      borderColor,\r\n      borderRadius: borderRadius + 'px',\r\n      borderWidth: borderWidth + 'px',\r\n      textDecoration: 'none',\r\n      disabled\r\n    }\r\n    return (\r\n      <button\r\n        style={style}\r\n        onClick={this.handleClick}\r\n      >{text}</button>)\r\n  },\r\n  name: 'lbp-form-button',\r\n  props: {\r\n    text: commonProps.text(),\r\n    vertical: commonProps.vertical,\r\n    backgroundColor: commonProps.backgroundColor,\r\n    color: commonProps.color,\r\n    fontSize: commonProps.fontSize,\r\n    lineHeight: commonProps.lineHeight,\r\n    borderWidth: commonProps.borderWidth,\r\n    borderRadius: commonProps.borderRadius,\r\n    borderColor: commonProps.borderColor,\r\n    textAlign: commonProps.textAlign()\r\n  },\r\n  methods: {\r\n    handleClick () {\r\n      if (this.disabled) return\r\n\r\n      // #!zh: data-type=lbp-form-input 在 lbp-form-input 组件中定义\r\n      let inputs = document.querySelectorAll(\"[data-type^='lbp-form-input']\")\r\n      if (!inputs.length) return\r\n      const self = this\r\n      let formData = new FormData()\r\n      inputs.forEach(input => formData.append(input.dataset.uuid, input.value))\r\n      const req = new XMLHttpRequest()\r\n      req.onreadystatechange = function () {\r\n        if (req.readyState === 4) {\r\n          const message = req.status === 200 ? '提交成功' : '提交失败'\r\n          self.$message.info(message)\r\n        }\r\n      }\r\n\r\n      // #!zh: vuex.module.editor.setWork 中定义\r\n      const workId = window.__work.id\r\n      // TODO #!zh: 可以动态配置表单提交地址\r\n      req.open('post', `/works/form/submit/${workId}`, true)\r\n      req.send(formData)\r\n    }\r\n  },\r\n  editorConfig: {\r\n    components: {\r\n      'lbs-select-input-type': {\r\n        props: ['value'],\r\n        computed: {\r\n          value_: {\r\n            get () {\r\n              return this.value\r\n            },\r\n            set (val) {\r\n              this.$emit('input', val)\r\n            }\r\n          }\r\n        },\r\n        template: `\r\n          <a-select v-model=\"value_\" placeholder=\"类型\">\r\n            <a-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </a-option>\r\n          </a-select>\r\n        `,\r\n        data: () => ({\r\n          options: [\r\n            {\r\n              label: '文字',\r\n              value: 'text'\r\n            },\r\n            {\r\n              label: '密码',\r\n              value: 'password'\r\n            },\r\n            {\r\n              label: '日期',\r\n              value: 'date'\r\n            },\r\n            {\r\n              label: '邮箱',\r\n              value: 'email'\r\n            },\r\n            {\r\n              label: '手机号',\r\n              value: 'tel'\r\n            }\r\n          ]\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}