{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\prop-multi-items-editor\\text.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\support\\prop-multi-items-editor\\text.js","mtime":1575526862272},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1575454465101}],"contextDependencies":[],"result":["import _toConsumableArray from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nexport default {\n  name: 'lbs-prop-text-enum-editor',\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n    return h(\"div\", [this.innerItems.map(function (item, index) {\n      return h(\"div\", [h(\"a-input\", {\n        \"attrs\": {\n          \"value\": item.value\n        },\n        \"on\": {\n          \"change\": function change(e) {\n            item.value = e.target.value;\n          }\n        },\n        \"style\": {\n          width: '70%'\n        }\n      }), h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"plus-circle\"\n        },\n        \"on\": {\n          \"click\": _this.add\n        },\n        \"class\": \"ml-2\"\n      }), h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"minus-circle\"\n        },\n        \"on\": {\n          \"click\": function click(item, index) {\n            return _this.minus(item, index);\n          }\n        },\n        \"class\": \"ml-1\"\n      })]);\n    })]);\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [{\n          value: 'default',\n          label: 'default'\n        }];\n      }\n    }\n  },\n  computed: {\n    innerItems: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(val) {\n        this.$emit('input', val);\n      }\n    }\n  },\n  methods: {\n    add: function add() {\n      this.$emit('change', [].concat(_toConsumableArray(this.innerItems), [{\n        value: \"\\u9009\\u9879\".concat(this.innerItems.length + 1),\n        label: \"\\u9009\\u9879\".concat(this.innerItems.length + 1, \"-label\")\n      }]));\n    },\n    minus: function minus(item, index) {\n      var items = this.innerItems.slice(0);\n      items.splice(index, 1);\n      this.$emit('change', items);\n    }\n  }\n};",{"version":3,"sources":["d:/project/luban/luban-h5/front-end/h5/src/components/core/support/prop-multi-items-editor/text.js"],"names":["name","render","innerItems","map","item","index","value","e","target","width","add","minus","props","type","Array","default","label","computed","get","set","val","$emit","methods","length","items","slice","splice"],"mappings":";AAAA,eAAe;AACbA,EAAAA,IAAI,EAAE,2BADO;AAEbC,EAAAA,MAFa,oBAEH;AAAA;;AAAA;AACR,qBAEI,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP;AAAA;AAAA;AAAA,mBAEAD,IAAI,CAACE;AAFL;AAAA;AAAA,oBAEsB,gBAAAC,CAAC,EAAI;AAAEH,YAAAA,IAAI,CAACE,KAAL,GAAaC,CAAC,CAACC,MAAF,CAASF,KAAtB;AAA6B;AAF1D;AAAA,iBAEmE;AAAEG,UAAAA,KAAK,EAAE;AAAT;AAFnE;AAAA;AAAA,kBAGH;AAHG;AAAA;AAAA,mBAGoB,KAAI,CAACC;AAHzB;AAAA,iBAGoC;AAHpC;AAAA;AAAA,kBAIH;AAJG;AAAA;AAAA,mBAIqB,eAACN,IAAD,EAAOC,KAAP;AAAA,mBAAiB,KAAI,CAACM,KAAL,CAAWP,IAAX,EAAiBC,KAAjB,CAAjB;AAAA;AAJrB;AAAA,iBAIqE;AAJrE;AAAA,KAApB,CAFJ;AAWD,GAdY;AAebO,EAAAA,KAAK,EAAE;AACLN,IAAAA,KAAK,EAAE;AACLO,MAAAA,IAAI,EAAEC,KADD;AAELC,MAAAA,OAAO,EAAE;AAAA,eAAM,CAAC;AACdT,UAAAA,KAAK,EAAE,SADO;AAEdU,UAAAA,KAAK,EAAE;AAFO,SAAD,CAAN;AAAA;AAFJ;AADF,GAfM;AAwBbC,EAAAA,QAAQ,EAAE;AACRf,IAAAA,UAAU,EAAE;AACVgB,MAAAA,GADU,iBACH;AACL,eAAO,KAAKZ,KAAZ;AACD,OAHS;AAIVa,MAAAA,GAJU,eAILC,GAJK,EAIA;AACR,aAAKC,KAAL,CAAW,OAAX,EAAoBD,GAApB;AACD;AANS;AADJ,GAxBG;AAkCbE,EAAAA,OAAO,EAAE;AACPZ,IAAAA,GADO,iBACA;AACL,WAAKW,KAAL,CAAW,QAAX,+BACK,KAAKnB,UADV,IAEE;AACEI,QAAAA,KAAK,wBAAO,KAAKJ,UAAL,CAAgBqB,MAAhB,GAAyB,CAAhC,CADP;AAEEP,QAAAA,KAAK,wBAAO,KAAKd,UAAL,CAAgBqB,MAAhB,GAAyB,CAAhC;AAFP,OAFF;AAOD,KATM;AAUPZ,IAAAA,KAVO,iBAUAP,IAVA,EAUMC,KAVN,EAUa;AAClB,UAAMmB,KAAK,GAAG,KAAKtB,UAAL,CAAgBuB,KAAhB,CAAsB,CAAtB,CAAd;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAarB,KAAb,EAAoB,CAApB;AACA,WAAKgB,KAAL,CAAW,QAAX,EAAqBG,KAArB;AACD;AAdM;AAlCI,CAAf","sourcesContent":["export default {\r\n  name: 'lbs-prop-text-enum-editor',\r\n  render () {\r\n    return <div>\r\n      {\r\n        this.innerItems.map((item, index) => (\r\n          <div>\r\n            <a-input value={item.value} onChange={e => { item.value = e.target.value }} style={{ width: '70%' }}></a-input>\r\n            <a-icon type=\"plus-circle\" onClick={this.add} class=\"ml-2\" />\r\n            <a-icon type=\"minus-circle\" onClick={(item, index) => this.minus(item, index)} class=\"ml-1\"></a-icon>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => [{\r\n        value: 'default',\r\n        label: 'default'\r\n      }]\r\n    }\r\n  },\r\n  computed: {\r\n    innerItems: {\r\n      get () {\r\n        return this.value\r\n      },\r\n      set (val) {\r\n        this.$emit('input', val)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    add () {\r\n      this.$emit('change', [\r\n        ...this.innerItems,\r\n        {\r\n          value: `选项${this.innerItems.length + 1}`,\r\n          label: `选项${this.innerItems.length + 1}-label`\r\n        }\r\n      ])\r\n    },\r\n    minus (item, index) {\r\n      const items = this.innerItems.slice(0)\r\n      items.splice(index, 1)\r\n      this.$emit('change', items)\r\n    }\r\n  }\r\n}\r\n"]}]}