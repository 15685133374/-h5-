{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\work.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\work.js","mtime":1575956069375},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport _slicedToArray from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Element from \"../../components/core/models/element\";\nimport strapi from \"../../utils/strapi\";\nimport Page from \"../../components/core/models/page\";\nimport Work from \"../../components/core/models/work\";\nimport { AxiosWrapper } from \"../../utils/http.js\";\nimport router from '@/router.js';\nimport { takeScreenshot } from \"../../utils/canvas-helper.js\";\n\nfunction setLoading(commit, loadingName, isLoading) {\n  commit('loading/update', {\n    type: loadingName,\n    payload: isLoading\n  }, {\n    root: true\n  });\n}\n\nexport var actions = {\n  previewWork: function previewWork(_ref) {\n    var commit = _ref.commit;\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    commit('previewWork', payload);\n  },\n  deployWork: function deployWork(_ref2) {\n    var commit = _ref2.commit;\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    commit('previewWork', payload);\n  },\n  createWork: function createWork(_ref3, payload) {\n    var commit = _ref3.commit;\n    strapi.createEntry('works', new Work()).then(function (entry) {\n      var routeData = router.resolve({\n        name: 'editor',\n        params: {\n          workId: entry.id\n        }\n      });\n      window.open(routeData.href, '_blank'); // 如果希望不打开新 tab，可以注释上面面两行，启用下面一行的代码即可，不过不推荐。将编辑器单独起一个页面更有利于 vuex 的数据管理\n      // router.replace({ name: 'editor', params: { workId: entry.id } })\n    });\n  },\n  updateWork: function updateWork(_ref4) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    // update work with strapi\n    var work = _objectSpread({}, state.work, {}, payload);\n\n    commit('setWork', work);\n  },\n\n  /**\r\n   * isSaveCover {Boolean} 保存作品时，是否保存封面图\r\n   * loadingName {String} saveWork_loading, previewWork_loading\r\n   * 预览作品之前需要先保存，但希望 用户点击保存按钮 和 点击预览按钮 loading_name 能够不同（虽然都调用了 saveWork）\r\n   * 因为 loading 效果要放在不同的按钮上\r\n   */\n  saveWork: function saveWork(_ref5) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch,\n        state = _ref5.state;\n\n    var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref6$isSaveCover = _ref6.isSaveCover,\n        isSaveCover = _ref6$isSaveCover === void 0 ? false : _ref6$isSaveCover,\n        _ref6$loadingName = _ref6.loadingName,\n        loadingName = _ref6$loadingName === void 0 ? 'saveWork_loading' : _ref6$loadingName;\n\n    var fn = function fn(callback) {\n      new AxiosWrapper({\n        dispatch: dispatch,\n        commit: commit,\n        loading_name: loadingName,\n        successMsg: '保存作品成功',\n        customRequest: strapi.updateEntry.bind(strapi)\n      }).put('works', state.work.id, state.work).then(callback);\n    };\n\n    return new Promise(function (resolve, reject) {\n      if (isSaveCover) {\n        setLoading(commit, 'uploadWorkCover_loading', true);\n        takeScreenshot().then(function (file) {\n          dispatch('uploadCover', {\n            file: file\n          }).then(function () {\n            setLoading(commit, 'uploadWorkCover_loading', false);\n            fn(resolve);\n          }); // uploadCover\n        }); // takeScreenshot\n      } else {\n        fn(resolve);\n      }\n    });\n  },\n  fetchWork: function fetchWork(_ref7, workId) {\n    var commit = _ref7.commit,\n        state = _ref7.state;\n    strapi.getEntry('works', workId).then(function (entry) {\n      commit('setWork', entry);\n      commit('setEditingPage');\n    });\n  },\n  fetchWorks: function fetchWorks(_ref8, workId) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch,\n        state = _ref8.state;\n\n    // console.log('********',window.location.href.split('/')[3].split('#')[0])\n    if (window.location.href.split('/')[3].split('#')[0] != '') {\n      new AxiosWrapper({\n        dispatch: dispatch,\n        commit: commit,\n        name: 'editor/setWorks',\n        loading_name: 'fetchWorks_loading',\n        successMsg: '获取作品列表成功',\n        customRequest: strapi.getEntries.bind(strapi)\n      }).get('works', {\n        is_template: false,\n        'user_id': window.location.href.split('/')[3].split('#')[0]\n      });\n    } else {\n      window.location.href = 'http://www.yuntvg.com';\n    }\n  },\n  fetchWorkTemplates: function fetchWorkTemplates(_ref9, workId) {\n    var commit = _ref9.commit,\n        dispatch = _ref9.dispatch,\n        state = _ref9.state;\n    new AxiosWrapper({\n      dispatch: dispatch,\n      commit: commit,\n      name: 'editor/setWorkTemplates',\n      loading_name: 'fetchWorkTemplates_loading',\n      successMsg: '获取模板列表成功',\n      customRequest: strapi.getEntries.bind(strapi)\n    }).get('works', {\n      is_template: true\n    });\n  },\n\n  /**\r\n   *\r\n   * @param {*} workId\r\n   * response demo:\r\n   {\r\n    \"uuidMap2Name\": {\r\n        \"1565596393441\": \"姓名\",\r\n        \"1565596397671\": \"学校\"\r\n    },\r\n    \"formRecords\": [\r\n        {\r\n            \"id\": 3,\r\n            \"form\": {\r\n                \"1565369322603\": \"abc\"\r\n            },\r\n            \"work\": 8,\r\n            \"created_at\": \"2019-08-09T16:52:28.826Z\",\r\n            \"updated_at\": \"2019-08-09T16:52:28.832Z\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"form\": {\r\n                \"1565595388440\": \"ddd\"\r\n            },\r\n            \"work\": 8,\r\n            \"created_at\": \"2019-08-11T07:36:54.521Z\",\r\n            \"updated_at\": \"2019-08-11T07:36:54.526Z\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"form\": {\r\n                \"1565595388440\": \"acd\"\r\n            },\r\n            \"work\": 8,\r\n            \"created_at\": \"2019-08-11T07:45:22.000Z\",\r\n            \"updated_at\": \"2019-08-11T07:45:22.005Z\"\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"form\": {\r\n                \"1565596393441\": \"b\",\r\n                \"1565596397671\": \"a\"\r\n            },\r\n            \"work\": 8,\r\n            \"created_at\": \"2019-08-11T07:59:00.938Z\",\r\n            \"updated_at\": \"2019-08-11T07:59:00.943Z\"\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"form\": {\r\n                \"1565596393441\": \"b\",\r\n                \"1565596397671\": \"a\"\r\n            },\r\n            \"work\": 8,\r\n            \"created_at\": \"2019-08-11T07:59:37.065Z\",\r\n            \"updated_at\": \"2019-08-11T07:59:37.070Z\"\r\n        }\r\n      ]\r\n    }\r\n   */\n  fetchFormsOfWork: function fetchFormsOfWork(_ref10, workId) {\n    var commit = _ref10.commit,\n        state = _ref10.state,\n        dispatch = _ref10.dispatch;\n    // 可以 return Promise\n    new AxiosWrapper({\n      dispatch: dispatch,\n      commit: commit,\n      name: 'editor/formDetailOfWork',\n      loading_name: 'queryFormsOfWork_loading',\n      successMsg: '表单查询完毕'\n    }).get(\"/works/form/query/\".concat(workId));\n  },\n  setWorkAsTemplate: function setWorkAsTemplate(_ref11, workId) {\n    var commit = _ref11.commit,\n        state = _ref11.state,\n        dispatch = _ref11.dispatch;\n    new AxiosWrapper({\n      dispatch: dispatch,\n      commit: commit,\n      // name: 'editor/formDetailOfWork',\n      loading_name: 'setWorkAsTemplate_loading',\n      successMsg: '设置为模板成功'\n    }).post(\"/works/set-as-template/\".concat(workId || state.work.id));\n  },\n  useTemplate: function useTemplate(_ref12, workId) {\n    var commit = _ref12.commit,\n        state = _ref12.state,\n        dispatch = _ref12.dispatch;\n    return new AxiosWrapper({\n      dispatch: dispatch,\n      commit: commit,\n      // name: 'editor/formDetailOfWork',\n      loading_name: 'useTemplate_loading',\n      successMsg: '使用模板成功'\n    }).post(\"/works/use-template/\".concat(workId));\n  },\n  uploadCover: function uploadCover(_ref13) {\n    var commit = _ref13.commit,\n        state = _ref13.state,\n        dispatch = _ref13.dispatch;\n\n    var _ref14 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        file = _ref14.file;\n\n    var formData = new FormData();\n    formData.append('files', file, \"\".concat(+new Date(), \".png\"));\n    formData.append('workId', state.work.id);\n    return new AxiosWrapper({\n      dispatch: dispatch,\n      commit: commit,\n      name: 'editor/setWorkCover',\n      loading_name: 'uploadWorkCover_loading',\n      successMsg: '上传封面图成功!' // }).post(`/works/uploadCover/${state.work.id}`, formData)\n\n    }).post(\"/upload/\", formData);\n  }\n}; // mutations\n\nexport var mutations = {\n  /**\r\n   *\r\n   * @param {*} state\r\n   * @param {Object} payload\r\n   *\r\n    value example: [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"1567769149231.png\",\r\n        \"hash\": \"1660b11229e7473b90f99a9f9afe7675\",\r\n        \"sha256\": \"lKl7f_csUAgOjf0VRYkBZ64EcTjvt4Dt4beNIhELpTU\",\r\n        \"ext\": \".png\",\r\n        \"mime\": \"image/png\",\r\n        \"size\": \"6.57\",\r\n        \"url\": \"/uploads/1660b11229e7473b90f99a9f9afe7675.png\",\r\n        \"provider\": \"local\",\r\n        \"public_id\": null,\r\n        \"created_at\": \"2019-09-06T11:25:49.255Z\",\r\n        \"updated_at\": \"2019-09-06T11:25:49.261Z\",\r\n        \"related\": []\r\n      }\r\n    ]\r\n   */\n  setWorkCover: function setWorkCover(state, _ref15) {\n    var type = _ref15.type,\n        value = _ref15.value;\n\n    var _value = _slicedToArray(value, 1),\n        cover = _value[0];\n\n    state.work.cover_image_url = cover.url;\n  },\n\n  /**\r\n   * payload: {\r\n   *  type:   @params {String} \"editor/setWorks\",\r\n   *  value:  @params {Array}  work list\r\n   * }\r\n   */\n  setWorks: function setWorks(state, _ref16) {\n    var type = _ref16.type,\n        value = _ref16.value;\n    value.sort(function (a, b) {\n      return b.id - a.id;\n    });\n    state.works = value;\n  },\n\n  /**\r\n   * payload: {\r\n   *  type:   @params {String} \"editor/setWorks\",\r\n   *  value:  @params {Array}  work list\r\n   * }\r\n   */\n  setWorkTemplates: function setWorkTemplates(state, _ref17) {\n    var type = _ref17.type,\n        value = _ref17.value;\n    value.sort(function (a, b) {\n      return b.id - a.id;\n    });\n    state.workTemplates = value;\n  },\n  setWork: function setWork(state, work) {\n    window.__work = work;\n    work.pages = work.pages.map(function (page) {\n      page.elements = page.elements.map(function (element) {\n        return new Element(element);\n      });\n      return new Page(page);\n    });\n    state.work = work;\n  },\n  previewWork: function previewWork(state, _ref18) {\n    var type = _ref18.type,\n        value = _ref18.value;\n  },\n  deployWork: function deployWork(state, _ref19) {\n    var type = _ref19.type,\n        value = _ref19.value;\n  },\n  formDetailOfWork: function formDetailOfWork(state, _ref20) {\n    var type = _ref20.type,\n        value = _ref20.value;\n    state.formDetailOfWork = value;\n  }\n};",null]}