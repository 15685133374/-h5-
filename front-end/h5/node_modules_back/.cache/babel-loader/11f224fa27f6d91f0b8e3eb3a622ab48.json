{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-group.js","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\plugins\\lbp-form-group.js","mtime":1575878365434},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport commonProps from \"./common/props.js\";\nimport { white } from 'ansi-colors';\nexport default {\n  name: 'lbp-form-group',\n  render: function render(h) {\n    var userName = this.userName,\n        phoneNum = this.phoneNum,\n        btnName = this.btnName;\n    var style = {\n      color: this.color,\n      textAlign: this.textAlign,\n      backgroundColor: this.backgroundColor,\n      fontSize: this.fontSize + 'px',\n      lineHeight: this.lineHeight + 'em',\n      borderColor: this.borderColor,\n      borderRadius: this.borderRadius + 'px',\n      borderWidth: this.borderWidth + 'px',\n      padding: '0 5px',\n      borderBottom: '1px solid #DCDCDC',\n      width: '100%'\n    };\n    var styleBtn = {\n      color: 'white',\n      backgroundColor: '#4E90FF',\n      border: 'none',\n      outline: 'none',\n      width: '100%',\n      borderRadius: '2px',\n      marginTop: '20px',\n      padding: '4px'\n    };\n    return h(\"div\", [h(\"label\", {\n      \"attrs\": {\n        \"for\": \"name\"\n      }\n    }, [userName]), h(\"br\"), h(\"input\", {\n      \"attrs\": {\n        \"disabled\": this.disabled,\n        \"type\": this.type,\n        \"name\": this.name,\n        \"id\": \"name\",\n        \"placeholder\": this.placeholder1,\n        \"autocomplete\": \"off\",\n        \"data-type\": \"lbp-form-input\"\n      },\n      \"style\": style\n    }), h(\"br\"), h(\"label\", {\n      \"attrs\": {\n        \"for\": \"phone\"\n      }\n    }, [phoneNum]), h(\"br\"), h(\"input\", {\n      \"attrs\": {\n        \"disabled\": this.disabled,\n        \"type\": this.type,\n        \"name\": this.name,\n        \"id\": \"phone\",\n        \"placeholder\": this.placeholder2,\n        \"autocomplete\": \"off\",\n        \"data-type\": \"lbp-form-input\"\n      },\n      \"style\": style\n    }), h(\"br\"), h(\"button\", {\n      \"class\": \"submit\",\n      \"style\": styleBtn,\n      \"on\": {\n        \"click\": this.handleClick\n      }\n    }, [btnName])]);\n  },\n  props: {\n    name: {\n      type: String,\n      default: function _default() {\n        return 'name';\n      }\n    },\n    type: {\n      type: String,\n      default: 'text',\n      editor: {\n        type: 'lbs-select-input-type',\n        label: '类型'\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // type: commonProps.type,\n    userName: commonProps.userName(),\n    phoneNum: commonProps.phoneNum(),\n    btnName: commonProps.btnName(),\n    placeholder1: commonProps.placeholder1('姓名'),\n    placeholder2: commonProps.placeholder2('电话'),\n    fontSize: commonProps.fontSize,\n    color: commonProps.color,\n    backgroundColor: commonProps.backgroundColor,\n    borderColor: commonProps.borderColor,\n    borderWidth: commonProps.borderWidth,\n    borderRadius: commonProps.borderRadius,\n    lineHeight: commonProps.lineHeight,\n    textAlign: commonProps.textAlign({\n      defaultValue: 'left'\n    })\n  },\n  methods: {\n    handleClick: function handleClick() {\n      if (this.disabled) return; // #!zh: data-type=lbp-form-input 在 lbp-form-input 组件中定义\n\n      var inputs = document.querySelectorAll(\"[data-type^='lbp-form-input']\");\n      if (!inputs.length) return;\n      var self = this;\n      var formData = new FormData();\n      inputs.forEach(function (input) {\n        return formData.append(input.dataset.uuid, input.value);\n      });\n      var req = new XMLHttpRequest();\n\n      req.onreadystatechange = function () {\n        if (req.readyState === 4) {\n          var message = req.status === 200 ? '提交成功' : '提交失败';\n          self.$message.info(message);\n        }\n      }; // #!zh: vuex.module.editor.setWork 中定义\n\n\n      var workId = window.__work.id; // TODO #!zh: 可以动态配置表单提交地址\n\n      req.open('post', \"/works/form/submit/\".concat(workId), true);\n      req.send(formData);\n    }\n  },\n  editorConfig: {\n    components: {\n      'lbs-select-input-type': {\n        props: ['value'],\n        computed: {\n          value_: {\n            get: function get() {\n              return this.value;\n            },\n            set: function set(val) {\n              this.$emit('input', val);\n            }\n          }\n        },\n        render: function render(h) {\n          var _this = this;\n\n          return h(\"a-select\", {\n            \"attrs\": {\n              \"placeholder\": \"类型\",\n              \"value\": this.value\n            },\n            \"on\": {\n              \"change\": function change(value) {\n                _this.$emit('input', value);\n\n                _this.$emit('change', value);\n              }\n            }\n          }, [this.options.map(function (option) {\n            return h(\"a-select-option\", {\n              \"key\": option.value,\n              \"attrs\": {\n                \"value\": option.value\n              }\n            }, [option.label]);\n          })]);\n        },\n        data: function data() {\n          return {\n            options: [{\n              label: '文字',\n              value: 'text'\n            }, {\n              label: '密码',\n              value: 'password'\n            }, {\n              label: '日期',\n              value: 'date'\n            }, {\n              label: '邮箱',\n              value: 'email'\n            }, {\n              label: '手机号',\n              value: 'tel'\n            }]\n          };\n        }\n      }\n    }\n  }\n}; // .lb-plugin__input {\n//   display: block;\n//   margin: 0;\n//   padding: 0 5px;\n//   box-sizing: border-box;\n//   overflow: visible;\n//   border: 1px solid #ced4da;\n//   &:focus {\n//     outline: none;\n//   }\n// }",null]}