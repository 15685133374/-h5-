{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue","mtime":1575526862472},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js","mtime":1575454488300}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState, mapActions } from 'vuex';\nimport QRCode from 'qrcode';\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue';\nimport CardCover from '@/components/common/work/card-cover.js';\nvar ListItemCard = {\n  props: {\n    work: {\n      type: Object,\n      default: function _default() {}\n    },\n    handleClickEdit: {\n      type: Function,\n      default: function _default() {}\n    },\n    handleClickPreview: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      qrcodeUrl: ''\n    };\n  },\n  methods: {\n    timeFmt: function timeFmt(date) {\n      var dateTime = new Date(date);\n      var displayTime = \"\".concat(dateTime.getFullYear(), \"-\").concat(dateTime.getMonth() + 1, \"-\").concat(dateTime.getDate());\n      return displayTime;\n    },\n    genQRCodeUrl: function genQRCodeUrl(work) {\n      var _this = this;\n\n      var url = \"/works/preview/\".concat(work.id);\n      QRCode.toDataURL(url, function (err, url) {\n        if (err) console.log(err);\n        _this.qrcodeUrl = url;\n      });\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    return h(\"a-card\", {\n      \"attrs\": {\n        \"hoverable\": true\n      }\n    }, [h(CardCover, {\n      \"slot\": \"cover\",\n      \"attrs\": {\n        \"qrcodeUrl\": this.qrcodeUrl,\n        \"coverImageUrl\": this.work.cover_image_url\n      }\n    }), h(\"template\", {\n      \"class\": \"ant-card-actions\",\n      \"slot\": \"actions\"\n    }, [h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.edit')\n      }\n    }, [h(\"router-link\", {\n      \"attrs\": {\n        \"to\": {\n          name: 'editor',\n          params: {\n            workId: this.work.id\n          }\n        },\n        \"target\": \"_blank\"\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"edit\",\n        \"title\": this.$t('workCard.edit')\n      }\n    })])]), h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.preview')\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"eye\",\n        \"title\": this.$t('workCard.preview')\n      },\n      \"on\": {\n        \"click\": this.handleClickPreview\n      }\n    })]), this.qrcodeUrl ? h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"close-circle\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          _this2.qrcodeUrl = '';\n        }\n      }\n    }) : h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"qrcode\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          return _this2.genQRCodeUrl(_this2.work);\n        }\n      }\n    })]), h(\"a-card-meta\", [h(\"div\", {\n      \"slot\": \"title\",\n      \"class\": \"ant-card-meta-title\",\n      \"style\": \"font-size: 14px;\"\n    }, [this.work.title, \"(\", this.work.id, \")\"]), h(\"div\", {\n      \"slot\": \"description\",\n      \"style\": \"font-size: 12px;\"\n    }, [h(\"div\", [this.$t('workCard.description'), \": \", this.work.description]), h(\"div\", [this.$t('workCard.createTime'), \": \", this.timeFmt(this.work.created_at)])])])]);\n  }\n};\nvar AddNewCard = {\n  functional: true,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        parent = _ref.parent;\n    return h(\"a-card\", {\n      \"attrs\": {\n        \"hoverable\": true\n      }\n    }, [h(\"div\", {\n      \"slot\": \"cover\",\n      \"class\": \"flex-center\",\n      \"style\": \"height: 415px;background: #f7f5f557;\",\n      \"on\": {\n        \"click\": props.handleCreate\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"plus\"\n      }\n    })]), h(\"template\", {\n      \"class\": \"ant-card-actions\",\n      \"slot\": \"actions\"\n    }, [h(\"span\", {\n      \"on\": {\n        \"click\": props.handleCreate\n      }\n    }, [parent.$t('workCard.createNewWork')])])]);\n  }\n};\nexport default {\n  components: {\n    ListItemCard: ListItemCard,\n    AddNewCard: AddNewCard\n  },\n  data: function data() {\n    return {\n      activeWork: null,\n      previewVisible: false\n    };\n  },\n  computed: _objectSpread({}, mapState('editor', ['works']), {}, mapState('loading', ['fetchWorks_loading'])),\n  methods: _objectSpread({}, mapActions('editor', ['fetchWorks']), {\n    deleteWork: function deleteWork(item) {// TODO delete work from work list\n    },\n    createWork: function createWork() {\n      this.$router.push({\n        name: 'editor'\n      });\n    }\n  }),\n  render: function render(h) {\n    var _this3 = this;\n\n    return h(\"div\", {\n      \"class\": \"works-wrapper\"\n    }, [h(\"a-row\", {\n      \"attrs\": {\n        \"gutter\": 12\n      }\n    }, [h(\"a-col\", {\n      \"attrs\": {\n        \"span\": 6\n      },\n      \"style\": \"margin-bottom: 10px;\"\n    }, [h(AddNewCard, {\n      \"attrs\": {\n        \"handleCreate\": this.createWork\n      }\n    })]), this.fetchWorks_loading ? h(\"a-col\", {\n      \"attrs\": {\n        \"span\": 18\n      },\n      \"style\": \"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\"\n    }, [h(\"a-spin\", {\n      \"attrs\": {\n        \"tip\": \"作品列表获取中...\"\n      }\n    })]) : this.works.map(function (work) {\n      return h(\"a-col\", {\n        \"attrs\": {\n          \"span\": 6\n        },\n        \"key\": work.id,\n        \"style\": \"margin-bottom: 20px;\"\n      }, [h(ListItemCard, {\n        \"attrs\": {\n          \"work\": work,\n          \"handleClickPreview\": function handleClickPreview(e) {\n            _this3.previewVisible = true;\n            _this3.activeWork = work;\n          }\n        }\n      })]);\n    })]), h(PreviewDialog, {\n      \"attrs\": {\n        \"work\": this.activeWork || {},\n        \"visible\": this.previewVisible,\n        \"handleClose\": function handleClose() {\n          _this3.previewVisible = false;\n        }\n      }\n    })]);\n  },\n  created: function created() {\n    this.fetchWorks();\n  }\n};",null]}