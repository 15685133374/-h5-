{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\index.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\editor\\index.js","mtime":1575616140084},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState, mapActions } from 'vuex';\nimport undoRedoHistory from \"../../../store/plugins/undo-redo/History\";\nimport \"../styles/index.scss\";\nimport 'animate.css';\nimport RenderEditCanvas from \"./canvas/edit\";\nimport RenderPreviewCanvas from \"./canvas/preview\";\nimport RenderPropsEditor from \"./edit-panel/props\";\nimport RenderScriptEditor from \"./edit-panel/script\";\nimport RenderAnimationEditor from \"./edit-panel/animation\";\nimport RenderActoionEditor from \"./edit-panel/action\";\nimport RenderBackgroundEditor from \"./edit-panel/background\";\nimport RenderShortcutsPanel from \"./shortcuts-panel/index\";\nimport RenderPageManager from \"./page-manager/index\";\nimport PreviewDialog from \"./modals/preview.vue\";\nimport LogoOfHeader from '@/components/common/header/logo.js';\nimport ExternalLinksOfHeader from '@/components/common/header/links.js';\nimport LangSelect from '@/components/common/header/LangSelect.vue';\nimport Feedback from '@/components/common/feedback/index'; // const sidebarMenus = [\n//   {\n//     i18nLabel: 'editor.sidebar.components',\n//     label: '组件列表',\n//     value: 'pluginList',\n//     antIcon: 'bars'\n//   },\n//   {\n//     i18nLabel: 'editor.sidebar.pages',\n//     label: '页面管理',\n//     value: 'pageManagement',\n//     antIcon: 'snippets'\n//   },\n//   {\n//     i18nLabel: 'editor.sidebar.templates',\n//     label: '免费模板',\n//     value: 'freeTemplate',\n//     antIcon: 'appstore'\n//   }\n// ]\n\nvar fixedTools = [{\n  i18nTooltip: 'editor.fixedTool.undo',\n  'tooltip': '撤消',\n  // TODO 支持快捷键\n  'text': '撤消',\n  'icon': 'mail-reply',\n  'action': function action() {\n    return undoRedoHistory.undo();\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.redo',\n  'tooltip': '恢复',\n  'text': '恢复',\n  'icon': 'mail-forward',\n  'action': function action() {\n    return undoRedoHistory.redo();\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.preview',\n  'tooltip': '刷新预览',\n  'text': '刷新预览',\n  'icon': 'eye',\n  'action': function action() {\n    this.previewVisible = true;\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.copyCurrentPage',\n  'tooltip': '复制当前页',\n  'text': '复制当前页',\n  'icon': 'copy',\n  'action': function action() {\n    this.pageManager({\n      type: 'copy'\n    });\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.importPSD',\n  'tooltip': '导入PSD',\n  'text': 'Ps',\n  'icon': '',\n  'action': '',\n  'disabled': true\n}, {\n  i18nTooltip: 'editor.fixedTool.zoomOut',\n  'tooltip': '放大画布',\n  'text': '放大画布',\n  'icon': 'plus',\n  'action': function action() {\n    this.scaleRate += 0.25;\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.zoomIn',\n  'tooltip': '缩小画布',\n  'text': '缩小画布',\n  'icon': 'minus',\n  'action': function action() {\n    this.scaleRate -= 0.25;\n  }\n}, {\n  i18nTooltip: 'editor.fixedTool.issues',\n  'tooltip': 'issues',\n  'text': '常见问题',\n  'icon': 'question',\n  'action': function action() {\n    window.open('https://github.com/ly525/luban-h5/issues/110');\n  }\n}];\nexport default {\n  name: 'Editor',\n  components: {\n    LogoOfHeader: LogoOfHeader,\n    ExternalLinksOfHeader: ExternalLinksOfHeader,\n    LangSelect: LangSelect\n  },\n  data: function data() {\n    return {\n      activeMenuKey: 'pluginList',\n      isPreviewMode: false,\n      activeTabKey: '属性',\n      previewVisible: false,\n      scaleRate: 1\n    };\n  },\n  computed: _objectSpread({}, mapState('editor', {\n    editingPage: function editingPage(state) {\n      return state.editingPage;\n    },\n    editingElement: function editingElement(state) {\n      return state.editingElement;\n    },\n    elements: function elements(state) {\n      return state.editingPage.elements;\n    },\n    pages: function pages(state) {\n      return state.work.pages;\n    },\n    work: function work(state) {\n      return state.work;\n    }\n  }), {}, mapState('loading', ['saveWork_loading', 'setWorkAsTemplate_loading', 'uploadWorkCover_loading'])),\n  methods: _objectSpread({}, mapActions('editor', ['elementManager', 'pageManager', 'saveWork', 'createWork', 'fetchWork', 'setWorkAsTemplate', 'setEditingElement', 'setEditingPage']), {}, mapActions('loading', {\n    updateLoading: 'update'\n  }), {\n    /**\r\n     * !#zh 点击插件，copy 其基础数据到组件树（中间画布）\r\n     * #!en click the plugin shortcut, create new Element with the plugin's meta data\r\n     * pluginInfo {Object}: 插件列表中的基础数据, {name}=pluginInfo\r\n     */\n    clone: function clone(_ref) {\n      var name = _ref.name;\n      this.elementManager({\n        type: 'add',\n        value: {\n          name: name\n        }\n      });\n    },\n    _renderMenuContent: function _renderMenuContent() {\n      var _this = this;\n\n      var h = this.$createElement;\n      return h(\"a-tabs\", {\n        \"style\": \"height: 100%;\",\n        \"attrs\": {\n          \"tabBarGutter\": 10\n        }\n      }, [h(\"a-tab-pane\", {\n        \"key\": \"plugin-list\",\n        \"attrs\": {\n          \"tab\": this.$t('editor.sidebar.components')\n        }\n      }, [h(RenderShortcutsPanel, {\n        \"attrs\": {\n          \"pluginsList\": this.pluginsList,\n          \"handleClickShortcut\": this.clone\n        }\n      })]), h(\"a-tab-pane\", {\n        \"key\": 'page-manager',\n        \"attrs\": {\n          \"tab\": this.$t('editor.sidebar.pages')\n        }\n      }, [h(RenderPageManager, {\n        \"attrs\": {\n          \"pages\": this.pages,\n          \"editingPage\": this.editingPage\n        },\n        \"on\": {\n          \"selectMenuItem\": function selectMenuItem(menuKey) {\n            _this.pageManager({\n              type: menuKey\n            });\n          },\n          \"editTitle\": function editTitle(_ref2) {\n            var pageIndexForEditingTitle = _ref2.pageIndexForEditingTitle,\n                newTitle = _ref2.newTitle;\n\n            _this.pageManager({\n              type: 'editTitle',\n              value: {\n                pageIndexForEditingTitle: pageIndexForEditingTitle,\n                newTitle: newTitle\n              }\n            });\n\n            _this.saveWork({\n              isSaveCover: false\n            });\n          },\n          \"selectPage\": function selectPage(pageIndex) {\n            _this.setEditingPage(pageIndex);\n          }\n        }\n      })])]); // switch (this.activeMenuKey) {\n      //   case sidebarMenus[0].value:\n      //     return (\n      //       <a-tabs\n      //         style=\"height: 100%;\"\n      //         tabBarGutter={10}\n      //       >\n      //         <a-tab-pane key=\"plugin-list\" tab={this.$t('editor.sidebar.components')}>\n      //           <RenderShortcutsPanel pluginsList={this.pluginsList} handleClickShortcut={this.clone} />\n      //         </a-tab-pane>\n      //         <a-tab-pane key='page-manager' tab={this.$t('editor.sidebar.pages')}>\n      //           <RenderPageManager\n      //             pages={this.pages}\n      //             editingPage={this.editingPage}\n      //             onSelectMenuItem={(menuKey) => {\n      //               this.pageManager({ type: menuKey })\n      //             }}\n      //             onEditTitle={({ pageIndexForEditingTitle, newTitle }) => {\n      //               this.pageManager({ type: 'editTitle', value: { pageIndexForEditingTitle, newTitle } })\n      //               this.saveWork({ isSaveCover: false })\n      //             }}\n      //             onSelectPage={(pageIndex) => { this.setEditingPage(pageIndex) }}\n      //           />\n      //         </a-tab-pane>\n      //       </a-tabs>\n      //     )\n      //   case sidebarMenus[1].value:\n      //     return (\n      //       <RenderPageManager\n      //         pages={this.pages}\n      //         editingPage={this.editingPage}\n      //         onSelectMenuItem={(menuKey) => {\n      //           this.pageManager({ type: menuKey })\n      //         }}\n      //         onSelectPage={(pageIndex) => { this.setEditingPage(pageIndex) }}\n      //       />\n      //     )\n      //   default:\n      //     return null\n      // }\n    }\n  }),\n  render: function render(h) {\n    var _this2 = this;\n\n    return h(\"a-layout\", {\n      \"attrs\": {\n        \"id\": \"luban-editor-layout\"\n      },\n      \"style\": {\n        height: '100vh'\n      }\n    }, [h(\"a-layout-header\", {\n      \"class\": \"header\"\n    }, [h(LogoOfHeader), h(LangSelect, {\n      \"style\": \"float: right;cursor: pointer;\"\n    }), h(\"a-menu\", {\n      \"attrs\": {\n        \"theme\": \"dark\",\n        \"mode\": \"horizontal\",\n        \"defaultSelectedKeys\": ['2']\n      },\n      \"style\": {\n        lineHeight: '64px',\n        float: 'right',\n        background: 'transparent'\n      }\n    }, [h(\"a-menu-item\", {\n      \"key\": \"1\",\n      \"class\": \"transparent-bg\"\n    }, [h(\"a-button\", {\n      \"attrs\": {\n        \"type\": \"primary\",\n        \"size\": \"small\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          _this2.previewVisible = true;\n        }\n      }\n    }, [this.$t('editor.header.preview')])]), h(\"a-menu-item\", {\n      \"key\": \"2\",\n      \"class\": \"transparent-bg\"\n    }, [h(\"a-button\", {\n      \"attrs\": {\n        \"size\": \"small\",\n        \"loading\": this.saveWork_loading || this.uploadWorkCover_loading\n      },\n      \"on\": {\n        \"click\": function click() {\n          return _this2.saveWork({\n            isSaveCover: true\n          });\n        }\n      }\n    }, [this.$t('editor.header.save')])]), h(\"a-menu-item\", {\n      \"key\": \"3\",\n      \"class\": \"transparent-bg\"\n    }, [h(\"a-dropdown-button\", {\n      \"on\": {\n        \"click\": function click() {}\n      },\n      \"attrs\": {\n        \"size\": \"small\"\n      }\n    }, [this.$t('editor.header.publish'), h(\"a-menu\", {\n      \"slot\": \"overlay\",\n      \"on\": {\n        \"click\": function click(_ref3) {\n          var key = _ref3.key;\n\n          switch (key) {\n            case 'setAsTemplate':\n              _this2.updateLoading({\n                type: 'setWorkAsTemplate_loading',\n                value: true\n              });\n\n              _this2.saveWork().then(function () {\n                _this2.setWorkAsTemplate();\n              });\n\n          }\n        }\n      }\n    }, [h(\"a-menu-item\", {\n      \"key\": \"setAsTemplate\"\n    }, [h(\"a-spin\", {\n      \"attrs\": {\n        \"spinning\": this.setWorkAsTemplate_loading,\n        \"size\": \"small\"\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"cloud-upload\"\n      }\n    }), this.$t('editor.header.setAsTemplate')])])])])])]), h(ExternalLinksOfHeader)]), h(\"a-layout\", [h(\"a-layout-sider\", {\n      \"attrs\": {\n        \"width\": \"240\",\n        \"theme\": 'light'\n      },\n      \"style\": {\n        background: '#fff',\n        padding: '12px'\n      }\n    }, [this._renderMenuContent()]), h(\"a-layout\", {\n      \"style\": \"padding: 0 0 24px\"\n    }, [h(\"a-layout-content\", {\n      \"style\": {\n        padding: '24px',\n        margin: 0,\n        minHeight: '280px'\n      }\n    }, [h(\"div\", {\n      \"style\": \"text-align: center;\"\n    }, [h(\"a-radio-group\", {\n      \"attrs\": {\n        \"size\": \"small\",\n        \"value\": this.isPreviewMode\n      },\n      \"on\": {\n        \"input\": function input(isPreviewMode) {\n          _this2.isPreviewMode = isPreviewMode;\n\n          if (isPreviewMode) {\n            // 当切换到预览模式的时候，清空当前编辑元素\n            _this2.setEditingElement(); // 相当于  setEditingElement(null)\n\n          }\n        }\n      }\n    }, [h(\"a-radio-button\", {\n      \"attrs\": {\n        \"label\": false,\n        \"value\": false\n      }\n    }, [this.$t('editor.centerPanel.mode.edit')]), h(\"a-radio-button\", {\n      \"attrs\": {\n        \"label\": true,\n        \"value\": true\n      }\n    }, [this.$t('editor.centerPanel.mode.preview')])])]), h(\"div\", {\n      \"class\": 'canvas-wrapper',\n      \"style\": {\n        transform: \"scale(\".concat(this.scaleRate, \")\")\n      }\n    }, [this.isPreviewMode ? h(RenderPreviewCanvas, {\n      \"attrs\": {\n        \"elements\": this.elements\n      }\n    }) : h(RenderEditCanvas, {\n      \"class\": \"edit-mode\",\n      \"attrs\": {\n        \"elements\": this.elements\n      }\n    }), h(\"i\", {\n      \"attrs\": {\n        \"id\": \"addHeight\",\n        \"aria-hidden\": \"true\"\n      },\n      \"class\": \"fa fa-chevron-down\",\n      \"style\": \"margin:0 auto\"\n    })])])]), h(\"a-layout-sider\", {\n      \"attrs\": {\n        \"width\": \"40\",\n        \"theme\": 'light'\n      },\n      \"style\": {\n        background: '#fff',\n        border: '1px solid #eee'\n      }\n    }, [h(\"a-button-group\", {\n      \"style\": {\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    }, [fixedTools.map(function (tool) {\n      return (// <a-tooltip effect=\"dark\" placement=\"left\" title={tool.tooltip}>\n        h(\"a-tooltip\", {\n          \"attrs\": {\n            \"effect\": \"dark\",\n            \"placement\": \"left\",\n            \"title\": _this2.$t(tool.i18nTooltip)\n          }\n        }, [h(\"a-button\", {\n          \"attrs\": {\n            \"block\": true,\n            \"type\": \"link\",\n            \"size\": \"small\",\n            \"disabled\": !!tool.disabled\n          },\n          \"class\": \"transparent-bg\",\n          \"style\": {\n            height: '40px',\n            color: '#000'\n          },\n          \"on\": {\n            \"click\": function click() {\n              return tool.action && tool.action.call(_this2);\n            }\n          }\n        }, [tool.icon ? h(\"i\", {\n          \"class\": ['shortcut-icon', 'fa', \"fa-\".concat(tool.icon)],\n          \"attrs\": {\n            \"aria-hidden\": 'true'\n          }\n        }) : tool.text]), tool.icon === 'minus' && h(\"div\", {\n          \"style\": {\n            fontSize: '12px',\n            textAlign: 'center'\n          }\n        }, [_this2.scaleRate * 100, \"%\"])])\n      );\n    })])]), h(\"a-layout-sider\", {\n      \"attrs\": {\n        \"width\": \"300\",\n        \"theme\": 'light'\n      },\n      \"style\": {\n        background: '#fff',\n        padding: '0 12px'\n      }\n    }, [h(\"a-tabs\", {\n      \"style\": \"height: 100%;\",\n      \"attrs\": {\n        \"tabBarGutter\": 10\n      },\n      \"on\": {\n        \"change\": function change(activeTabKey) {\n          _this2.activeTabKey = activeTabKey;\n\n          if (activeTabKey === 'background') {\n            var bgElement = _this2.elements.find(function (e) {\n              return e.name === 'lbp-background';\n            });\n\n            _this2.setEditingElement(bgElement);\n          }\n        }\n      }\n    }, [h(\"a-tab-pane\", {\n      \"key\": \"属性\"\n    }, [h(\"span\", {\n      \"slot\": \"tab\"\n    }, [this.$t('editor.editPanel.tab.prop')]), h(RenderPropsEditor)]), h(\"a-tab-pane\", {\n      \"attrs\": {\n        \"label\": \"动画\",\n        \"tab\": this.$t('editor.editPanel.tab.animation')\n      },\n      \"key\": '动画'\n    }, [h(RenderAnimationEditor)]), h(\"a-tab-pane\", {\n      \"attrs\": {\n        \"label\": \"动作\",\n        \"tab\": this.$t('editor.editPanel.tab.action')\n      },\n      \"key\": '动作'\n    }, [this.activeTabKey === '动作' && h(RenderActoionEditor)]), h(\"a-tab-pane\", {\n      \"attrs\": {\n        \"label\": \"脚本\",\n        \"tab\": this.$t('editor.editPanel.tab.script')\n      },\n      \"key\": '脚本'\n    }, [h(RenderScriptEditor)]), h(\"a-tab-pane\", {\n      \"attrs\": {\n        \"label\": \"背景\",\n        \"tab\": this.$t('editor.editPanel.tab.background')\n      },\n      \"key\": 'background'\n    }, [h(RenderBackgroundEditor)])])])]), h(PreviewDialog, {\n      \"attrs\": {\n        \"work\": this.work,\n        \"visible\": this.previewVisible,\n        \"handleClose\": function handleClose() {\n          _this2.previewVisible = false;\n        }\n      }\n    }), h(Feedback)]);\n  },\n  created: function created() {\n    // event bus for editor\n    window.getEditorApp = this;\n    var workId = this.$route.params.workId;\n    console.log(workId);\n\n    if (workId) {\n      this.fetchWork(workId);\n    } else {\n      this.createWork();\n    }\n  }\n};",null]}