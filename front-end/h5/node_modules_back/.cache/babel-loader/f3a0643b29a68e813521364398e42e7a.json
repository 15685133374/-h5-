{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\templates.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\templates.vue","mtime":1575526862472},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js","mtime":1575454488300}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapState, mapActions } from 'vuex';\nimport QRCode from 'qrcode';\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue';\nimport CardCover from '@/components/common/work/card-cover.js';\nvar ListItemCard = {\n  props: {\n    work: {\n      type: Object,\n      default: function _default() {}\n    },\n    handleClickEdit: {\n      type: Function,\n      default: function _default() {}\n    },\n    handleClickPreview: {\n      type: Function,\n      default: function _default() {}\n    },\n    handleUseTemplate: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      qrcodeUrl: ''\n    };\n  },\n  methods: {\n    timeFmt: function timeFmt(date) {\n      var dateTime = new Date(date);\n      var displayTime = \"\".concat(dateTime.getFullYear(), \"-\").concat(dateTime.getMonth() + 1, \"-\").concat(dateTime.getDate());\n      return displayTime;\n    },\n    genQRCodeUrl: function genQRCodeUrl(work) {\n      var _this = this;\n\n      var url = \"/works/preview/\".concat(work.id);\n      QRCode.toDataURL(url, function (err, url) {\n        if (err) console.log(err);\n        _this.qrcodeUrl = url;\n      });\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    return h(\"a-card\", {\n      \"attrs\": {\n        \"hoverable\": true\n      }\n    }, [h(CardCover, {\n      \"slot\": \"cover\",\n      \"attrs\": {\n        \"qrcodeUrl\": this.qrcodeUrl,\n        \"coverImageUrl\": this.work.cover_image_url\n      }\n    }), h(\"template\", {\n      \"class\": \"ant-card-actions\",\n      \"slot\": \"actions\"\n    }, [h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.useNow')\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"plus-square\",\n        \"title\": this.$t('workCard.useNow')\n      },\n      \"on\": {\n        \"click\": function click() {\n          _this2.handleUseTemplate(_this2.work);\n        }\n      }\n    })]), h(\"a-tooltip\", {\n      \"attrs\": {\n        \"effect\": \"dark\",\n        \"placement\": \"bottom\",\n        \"title\": this.$t('workCard.preview')\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"eye\",\n        \"title\": this.$t('workCard.preview')\n      },\n      \"on\": {\n        \"click\": this.handleClickPreview\n      }\n    })]), this.qrcodeUrl ? h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"close-circle\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          _this2.qrcodeUrl = '';\n        }\n      }\n    }) : h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"qrcode\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          return _this2.genQRCodeUrl(_this2.work);\n        }\n      }\n    })]), h(\"a-card-meta\", [h(\"div\", {\n      \"slot\": \"title\",\n      \"class\": \"ant-card-meta-title\",\n      \"style\": \"font-size: 14px;\"\n    }, [this.work.title, \"(\", this.work.id, \")\"]), h(\"div\", {\n      \"slot\": \"description\",\n      \"style\": \"font-size: 12px;\"\n    }, [h(\"div\", [this.$t('workCard.description'), \": \", this.work.description]), h(\"div\", [this.$t('workCard.createTime'), \": \", this.timeFmt(this.work.created_at)])])])]);\n  }\n};\nexport default {\n  components: {\n    ListItemCard: ListItemCard\n  },\n  data: function data() {\n    return {\n      activeWork: null,\n      previewVisible: false,\n      useTemplateDialogVisible: false,\n      clonedWorkFromTemplate: null // 从某个模板复制出来的作品\n\n    };\n  },\n  computed: _objectSpread({}, mapState('editor', ['works', 'workTemplates']), {}, mapState('loading', ['fetchWorks_loading'])),\n  methods: _objectSpread({}, mapActions('editor', ['fetchWorks', 'fetchWorkTemplates', 'useTemplate']), {\n    deleteWork: function deleteWork(item) {// TODO delete work from work list\n    },\n    createWork: function createWork() {\n      this.$router.push({\n        name: 'editor'\n      }); // window.open('#/editor', '_blank')\n    }\n  }),\n  render: function render(h) {\n    var _this3 = this;\n\n    return h(\"div\", {\n      \"class\": \"works-wrapper\"\n    }, [h(\"a-row\", {\n      \"attrs\": {\n        \"gutter\": 12\n      }\n    }, [this.fetchWorkTemplates_loading ? h(\"a-col\", {\n      \"attrs\": {\n        \"span\": 24\n      },\n      \"style\": \"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\"\n    }, [h(\"a-spin\", {\n      \"attrs\": {\n        \"tip\": \"作品列表获取中...\"\n      }\n    })]) : this.workTemplates.map(function (work) {\n      return h(\"a-col\", {\n        \"attrs\": {\n          \"span\": 6\n        },\n        \"key\": work.id,\n        \"style\": \"margin-bottom: 20px;\"\n      }, [h(ListItemCard, {\n        \"attrs\": {\n          \"work\": work,\n          \"handleClickPreview\": function handleClickPreview(e) {\n            _this3.previewVisible = true;\n            _this3.activeWork = work;\n          },\n          \"handleUseTemplate\": function handleUseTemplate(templateWork) {\n            _this3.useTemplateDialogVisible = true;\n\n            _this3.useTemplate(templateWork.id).then(function (clonedWork) {\n              _this3.clonedWorkFromTemplate = clonedWork;\n            });\n          }\n        }\n      })]);\n    })]), h(PreviewDialog, {\n      \"attrs\": {\n        \"work\": this.activeWork || {},\n        \"visible\": this.previewVisible,\n        \"handleClose\": function handleClose() {\n          _this3.previewVisible = false;\n        }\n      }\n    }), this.useTemplateDialogVisible && h(\"a-modal\", {\n      \"attrs\": {\n        \"visible\": true,\n        \"width\": \"240px\",\n        \"okText\": \"保存\",\n        \"footer\": null,\n        \"closable\": false,\n        \"centered\": true\n      }\n    }, [h(\"div\", {\n      \"style\": \"text-align: center;\"\n    }, [this.clonedWorkFromTemplate ? h(\"div\", [h(\"div\", {\n      \"style\": {\n        margin: '12px'\n      }\n    }, [h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"check-circle\",\n        \"theme\": \"twoTone\",\n        \"twoToneColor\": \"#52c41a\"\n      }\n    }), \" \\u6A21\\u677F\\u5DF2\\u4FDD\\u5B58\\u81F3\\\"\\u6211\\u7684\\u4F5C\\u54C1\\\"\\u4E2D\"]), h(\"a-button\", {\n      \"on\": {\n        \"click\": function click() {\n          _this3.useTemplateDialogVisible = false;\n          _this3.clonedWorkFromTemplate = null;\n        }\n      }\n    }, [\"\\u6211\\u518D\\u901B\\u901B\"]), h(\"a-button\", {\n      \"attrs\": {\n        \"type\": \"primary\"\n      },\n      \"on\": {\n        \"click\": function click() {\n          var routeData = _this3.$router.resolve({\n            name: 'editor',\n            params: {\n              workId: _this3.clonedWorkFromTemplate.id\n            }\n          });\n\n          window.open(routeData.href, '_blank');\n        }\n      },\n      \"style\": {\n        marginLeft: '12px'\n      }\n    }, [\"\\u7ACB\\u5373\\u67E5\\u770B\"])]) : h(\"a-spin\", {\n      \"attrs\": {\n        \"tip\": \"复制中\"\n      }\n    })])])]);\n  },\n  created: function created() {\n    this.fetchWorkTemplates();\n  }\n};",{"version":3,"sources":["templates.vue"],"names":[],"mappings":";;;;;;;;;AACA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,OAAA,aAAA,MAAA,6CAAA;AACA,OAAA,SAAA,MAAA,wCAAA;AAEA,IAAA,YAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KATA;AAaA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AAbA,GADA;AAmBA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAAA,GAnBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,WAAA,aAAA,QAAA,CAAA,WAAA,EAAA,cAAA,QAAA,CAAA,QAAA,KACA,CADA,cACA,QAAA,CAAA,OAAA,EADA,CAAA;AAEA,aAAA,WAAA;AACA,KANA;AAOA,IAAA,YAPA,wBAOA,IAPA,EAOA;AAAA;;AACA,UAAA,GAAA,4BAAA,IAAA,CAAA,EAAA,CAAA;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,GAAA,EAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,YAAA,GAAA,EAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA;AACA,OAHA;AAIA;AAbA,GAtBA;AAqCA,EAAA,MArCA,kBAqCA,CArCA,EAqCA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEA,OAFA;AAAA;AAAA,qBAEA,KAAA,SAFA;AAAA,yBAEA,KAAA,IAAA,CAAA;AAFA;AAAA;AAAA,eAGA,kBAHA;AAAA,cAGA;AAHA;AAAA;AAAA,kBAIA,MAJA;AAAA,qBAIA,QAJA;AAAA,iBAIA,KAAA,EAAA,CAAA,iBAAA;AAJA;AAAA;AAAA;AAAA,gBAKA,aALA;AAAA,iBAKA,KAAA,EAAA,CAAA,iBAAA;AALA;AAAA;AAAA,iBAKA,iBAAA;AACA,UAAA,MAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA;AACA;AAPA;AAAA;AAAA;AAAA,kBAUA,MAVA;AAAA,qBAUA,QAVA;AAAA,iBAUA,KAAA,EAAA,CAAA,kBAAA;AAVA;AAAA;AAAA;AAAA,gBAWA,KAXA;AAAA,iBAWA,KAAA,EAAA,CAAA,kBAAA;AAXA;AAAA;AAAA,iBAWA,KAAA;AAXA;AAAA,UAcA,KAAA,SAAA;AAAA;AAAA,gBACA;AADA;AAAA;AAAA,iBACA,iBAAA;AAAA,UAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AAAA;AADA;AAAA;AAAA;AAAA,gBAEA;AAFA;AAAA;AAAA,iBAEA;AAAA,iBAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA;AAFA;AAAA,MAdA;AAAA,cAyBA,OAzBA;AAAA,eAyBA,qBAzBA;AAAA,eAyBA;AAzBA,QA0BA,KAAA,IAAA,CAAA,KA1BA,OA0BA,KAAA,IAAA,CAAA,EA1BA;AAAA,cA4BA,aA5BA;AAAA,eA4BA;AA5BA,kBA8BA,KAAA,EAAA,CAAA,sBAAA,CA9BA,QA8BA,KAAA,IAAA,CAAA,WA9BA,cA+BA,KAAA,EAAA,CAAA,qBAAA,CA/BA,QA+BA,KAAA,OAAA,CAAA,KAAA,IAAA,CAAA,UAAA,CA/BA;AAoCA;AA1EA,CAAA;AA6EA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,cAAA,EAAA,KAFA;AAGA,MAAA,wBAAA,EAAA,KAHA;AAIA,MAAA,sBAAA,EAAA,IAJA,CAIA;;AAJA,KAAA;AAAA,GAJA;AAUA,EAAA,QAAA,oBACA,QAAA,CAAA,QAAA,EAAA,CAAA,OAAA,EAAA,eAAA,CAAA,CADA,MAEA,QAAA,CAAA,SAAA,EAAA,CAAA,oBAAA,CAAA,CAFA,CAVA;AAcA,EAAA,OAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CACA,YADA,EAEA,oBAFA,EAGA,aAHA,CAAA,CADA;AAMA,IAAA,UANA,sBAMA,IANA,EAMA,CACA;AACA,KARA;AASA,IAAA,UATA,wBASA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,EADA,CAEA;AACA;AAZA,IAdA;AA4BA,EAAA,MA5BA,kBA4BA,CA5BA,EA4BA;AAAA;;AACA;AAAA,eACA;AADA;AAAA;AAAA,kBAEA;AAFA;AAAA,QAIA,KAAA,0BAAA;AAAA;AAAA,gBACA;AADA;AAAA,eACA;AADA;AAAA;AAAA,eAEA;AAFA;AAAA,WAIA,KAAA,aAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA;AAAA;AAAA,kBACA;AADA;AAAA,eACA,IAAA,CAAA,EADA;AAAA,iBACA;AADA;AAAA;AAAA,kBAEA,IAFA;AAAA,gCAGA,4BAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,IAAA;AACA,YAAA,MAAA,CAAA,UAAA,GAAA,IAAA;AACA,WANA;AAAA,+BAOA,2BAAA,YAAA,EAAA;AACA,YAAA,MAAA,CAAA,wBAAA,GAAA,IAAA;;AACA,YAAA,MAAA,CAAA,WAAA,CAAA,YAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA,cAAA,MAAA,CAAA,sBAAA,GAAA,UAAA;AACA,aAFA;AAGA;AAZA;AAAA;AAAA,KAAA,CARA;AAAA;AAAA,gBA4BA,KAAA,UAAA,IAAA,EA5BA;AAAA,mBA6BA,KAAA,cA7BA;AAAA,uBA8BA,uBAAA;AAAA,UAAA,MAAA,CAAA,cAAA,GAAA,KAAA;AAAA;AA9BA;AAAA,QAkCA,KAAA,wBAAA;AAAA;AAAA,mBAEA,IAFA;AAAA,iBAKA,OALA;AAAA,kBAMA,IANA;AAAA,kBAOA,IAPA;AAAA,oBAQA,KARA;AAAA;AAAA;AAAA;AAAA,eAWA;AAXA,QAaA,KAAA,sBAAA;AAAA,eAEA;AAAA,QAAA,MAAA,EAAA;AAAA;AAFA;AAAA;AAAA,gBAEA,cAFA;AAAA,iBAEA,SAFA;AAAA,wBAEA;AAFA;AAAA;AAAA;AAAA,iBAGA,iBAAA;AACA,UAAA,MAAA,CAAA,wBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,sBAAA,GAAA,IAAA;AACA;AANA;AAAA;AAAA;AAAA,gBAOA;AAPA;AAAA;AAAA,iBAQA,iBAAA;AACA,cAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AAAA,YAAA,IAAA,EAAA,QAAA;AAAA,YAAA,MAAA,EAAA;AAAA,cAAA,MAAA,EAAA,MAAA,CAAA,sBAAA,CAAA;AAAA;AAAA,WAAA,CAAA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,QAAA;AACA;AAXA;AAAA,eAYA;AAAA,QAAA,UAAA,EAAA;AAAA;AAZA;AAAA;AAAA,eAeA;AAfA;AAAA,MAbA,IAlCA;AAqEA,GAlGA;AAmGA,EAAA,OAnGA,qBAmGA;AACA,SAAA,kBAAA;AACA;AArGA,CAAA","sourcesContent":["<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport QRCode from 'qrcode'\r\n\r\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue'\r\nimport CardCover from '@/components/common/work/card-cover.js'\r\n\r\nconst ListItemCard = {\r\n  props: {\r\n    work: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n    handleClickEdit: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    handleClickPreview: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    handleUseTemplate: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data: () => ({\r\n    qrcodeUrl: ''\r\n  }),\r\n  methods: {\r\n    timeFmt (date) {\r\n      const dateTime = new Date(date)\r\n      const displayTime = `${dateTime.getFullYear()}-${dateTime.getMonth() +\r\n        1}-${dateTime.getDate()}`\r\n      return displayTime\r\n    },\r\n    genQRCodeUrl (work) {\r\n      const url = `/works/preview/${work.id}`\r\n      QRCode.toDataURL(url, (err, url) => {\r\n        if (err) console.log(err)\r\n        this.qrcodeUrl = url\r\n      })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <a-card hoverable >\r\n        <CardCover slot=\"cover\" qrcodeUrl={this.qrcodeUrl} coverImageUrl={this.work.cover_image_url} />\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.useNow')}>\r\n            <a-icon type=\"plus-square\" title={this.$t('workCard.useNow')} onClick={() => {\r\n              this.handleUseTemplate(this.work)\r\n            }} />\r\n          </a-tooltip>\r\n          {/** 预览 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.preview')}>\r\n            <a-icon type=\"eye\" title={this.$t('workCard.preview')} onClick={this.handleClickPreview} />\r\n          </a-tooltip>\r\n          {\r\n            this.qrcodeUrl\r\n              ? <a-icon type=\"close-circle\" onClick={() => { this.qrcodeUrl = '' }} />\r\n              : <a-icon type=\"qrcode\" onClick={() => this.genQRCodeUrl(this.work)} />\r\n          }\r\n          {/**\r\n          <a-icon type=\"setting\" />\r\n          <a-icon type=\"ellipsis\" />\r\n           */}\r\n        </template>\r\n        <a-card-meta\r\n        >\r\n          <div slot=\"title\" class=\"ant-card-meta-title\" style=\"font-size: 14px;\">\r\n            {this.work.title}({this.work.id})\r\n          </div>\r\n          <div slot=\"description\" style=\"font-size: 12px;\">\r\n            {/** 描述 时间 */}\r\n            <div>{this.$t('workCard.description')}: {this.work.description}</div>\r\n            <div>{this.$t('workCard.createTime')}: {this.timeFmt(this.work.created_at)}</div>\r\n          </div>\r\n        </a-card-meta>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    ListItemCard\r\n  },\r\n  data: () => ({\r\n    activeWork: null,\r\n    previewVisible: false,\r\n    useTemplateDialogVisible: false,\r\n    clonedWorkFromTemplate: null // 从某个模板复制出来的作品\r\n  }),\r\n  computed: {\r\n    ...mapState('editor', ['works', 'workTemplates']),\r\n    ...mapState('loading', ['fetchWorks_loading'])\r\n  },\r\n  methods: {\r\n    ...mapActions('editor', [\r\n      'fetchWorks',\r\n      'fetchWorkTemplates',\r\n      'useTemplate'\r\n    ]),\r\n    deleteWork (item) {\r\n      // TODO delete work from work list\r\n    },\r\n    createWork () {\r\n      this.$router.push({ name: 'editor' })\r\n      // window.open('#/editor', '_blank')\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <div class=\"works-wrapper\">\r\n        <a-row gutter={12}>\r\n          {\r\n            this.fetchWorkTemplates_loading\r\n              ? <a-col span={24} style=\"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\">\r\n                <a-spin tip=\"作品列表获取中...\"/>\r\n              </a-col>\r\n              : this.workTemplates.map(work => (\r\n                <a-col span={6} key={work.id} style=\"margin-bottom: 20px;\">\r\n                  <ListItemCard work={work}\r\n                    handleClickPreview={e => {\r\n                      this.previewVisible = true\r\n                      this.activeWork = work\r\n                    }}\r\n                    handleUseTemplate={templateWork => {\r\n                      this.useTemplateDialogVisible = true\r\n                      this.useTemplate(templateWork.id).then((clonedWork) => {\r\n                        this.clonedWorkFromTemplate = clonedWork\r\n                      })\r\n                    }}\r\n                  />\r\n                </a-col>\r\n              ))\r\n          }\r\n        </a-row>\r\n        {\r\n          <PreviewDialog\r\n            work={this.activeWork || {}}\r\n            visible={this.previewVisible}\r\n            handleClose={() => { this.previewVisible = false }}\r\n          />\r\n        }\r\n        {\r\n          this.useTemplateDialogVisible &&\r\n          <a-modal\r\n            visible={true}\r\n            // onOk={() => { this.useTemplateDialogVisible = true }}\r\n            // onCancel={() => { this.useTemplateDialogVisible = false }}\r\n            width=\"240px\"\r\n            okText=\"保存\"\r\n            footer={null}\r\n            closable={false}\r\n            centered\r\n          >\r\n            <div style=\"text-align: center;\">\r\n              {\r\n                this.clonedWorkFromTemplate\r\n                  ? <div>\r\n                    <div style={{ margin: '12px' }}><a-icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> 模板已保存至\"我的作品\"中</div>\r\n                    <a-button onClick={() => {\r\n                      this.useTemplateDialogVisible = false\r\n                      this.clonedWorkFromTemplate = null\r\n                    }}>我再逛逛</a-button>\r\n                    <a-button type=\"primary\"\r\n                      onClick={() => {\r\n                        const routeData = this.$router.resolve({ name: 'editor', params: { workId: this.clonedWorkFromTemplate.id } })\r\n                        window.open(routeData.href, '_blank')\r\n                      }}\r\n                      style={{ marginLeft: '12px' }}\r\n                    >立即查看</a-button>\r\n                  </div>\r\n                  : <a-spin tip=\"复制中\" />\r\n              }\r\n            </div>\r\n          </a-modal>\r\n        }\r\n      </div>\r\n    )\r\n  },\r\n  created () {\r\n    this.fetchWorkTemplates()\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/work-manager"}]}