{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\models\\element.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\components\\core\\models\\element.js","mtime":1575857848946},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.function.name\";\nimport _classCallCheck from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { parsePx } from \"../../../utils/element.js\"; // #! 编辑状态，不可以点击的按钮，因为点击按钮会触发一些默认行为，比如表单提交等\n\nvar disabledPluginsForEditMode = ['lbp-form-input', 'lbp-form-button', 'lbp-video'];\n\nvar cloneObj = function cloneObj(value) {\n  return JSON.parse(JSON.stringify(value));\n}; // const scrW = document.getElementsByClassName('edit-mode')[0].clientWidth\n\n\nvar defaultStyle = {\n  top: 0,\n  bottom: 100,\n  left: 0,\n  width: 315,\n  height: 100,\n  zindex: 1,\n  textAlign: 'center',\n  color: '#000000',\n  backgroundColor: 'rgba(255, 255, 255, 0)',\n  fontSize: 14\n};\n\nvar Element =\n/*#__PURE__*/\nfunction () {\n  function Element(ele) {\n    _classCallCheck(this, Element);\n\n    this.name = ele.name;\n    this.uuid = ele.uuid || +new Date();\n    /**\r\n     * #!zh:\r\n     * 之前版本代码：https://github.com/ly525/luban-h5/blob/a7875cbc73c0d18bc2459985ca3ce1d4dc44f141/front-end/h5/src/components/core/models/element.js#L21\r\n     * 1.之前的版本为：this.pluginProps = {}, 改为下面的版本\r\n     * 是因为要支持[复制画布上的元素]，所以需要先使用 ele.pluginProps 进行初始化（也就是拷贝之前的元素的值）\r\n     *\r\n     * 2. 移除 this.init() 原因是：如果是 复制元素，则 init 会把 copy 的值重新覆盖为初始值，copy 无效\r\n     *\r\n     * 3. 为何需要 clone，因为会有 element.clone() 以及 page.clone()，\r\n     *    element.pluginProps 和 elementcommonStyle 是引用类型，如果不做 deep_clone 可能会出现意外错误\r\n     */\n\n    this.pluginProps = _typeof(ele.pluginProps) === 'object' && cloneObj(_objectSpread({}, ele.pluginProps, {\n      uuid: this.uuid\n    })) || this.getDefaultPluginProps(ele.editorConfig || {});\n    this.commonStyle = _typeof(ele.commonStyle) === 'object' && cloneObj(ele.commonStyle) || _objectSpread({}, defaultStyle, {\n      zindex: ele.zindex\n    });\n    this.events = [];\n    this.animations = ele.animations || [];\n  } // init prop of plugin\n\n\n  _createClass(Element, [{\n    key: \"getDefaultPluginProps\",\n    value: function getDefaultPluginProps(propsConfig) {\n      var pluginProps = {\n        uuid: this.uuid\n      };\n      Object.keys(propsConfig).forEach(function (key) {\n        // #6\n        if (key === 'name') {\n          console.warn('Please do not use {name} as plugin prop');\n          return;\n        }\n\n        var defaultValue = propsConfig[key].default;\n        pluginProps[key] = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n      });\n      return pluginProps;\n    } // getDefaultPluginProps (editorConfig) {\n    //   // init prop of plugin\n    //   const propConf = editorConfig.propsConfig\n    //   const pluginProps = {}\n    //   Object.keys(propConf).forEach(key => {\n    //     // #6\n    //     if (key === 'name') {\n    //       console.warn('Please do not use {name} as plugin prop')\n    //       return\n    //     }\n    //     pluginProps[key] = propConf[key].defaultPropValue\n    //   })\n    //   return pluginProps\n    // }\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$position = _ref.position,\n          position = _ref$position === void 0 ? 'static' : _ref$position,\n          _ref$isRem = _ref.isRem,\n          isRem = _ref$isRem === void 0 ? false : _ref$isRem;\n\n      if (this.name === 'lbp-background') {\n        return {\n          width: '100%',\n          height: '100%'\n        };\n      }\n\n      var pluginProps = this.pluginProps;\n      var commonStyle = this.commonStyle;\n      var style = {\n        top: parsePx(pluginProps.top || commonStyle.top, isRem),\n        left: parsePx(pluginProps.left || commonStyle.left, isRem),\n        width: parsePx(pluginProps.width || commonStyle.width, isRem),\n        height: parsePx(pluginProps.height || commonStyle.height, isRem),\n        fontSize: parsePx(pluginProps.fontSize || commonStyle.fontSize, isRem),\n        color: pluginProps.color || commonStyle.color,\n        // backgroundColor: pluginProps.backgroundColor || commonStyle.backgroundColor,\n        textAlign: pluginProps.textAlign || commonStyle.textAlign,\n        'z-index': commonStyle.zindex,\n        position: position\n      };\n      return style;\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$mode = _ref2.mode,\n          mode = _ref2$mode === void 0 ? 'edit' : _ref2$mode;\n\n      return _objectSpread({}, this.pluginProps, {\n        disabled: disabledPluginsForEditMode.includes(this.name) && mode === 'edit'\n      });\n    }\n  }, {\n    key: \"getClass\",\n    value: function getClass() {}\n  }, {\n    key: \"getData\",\n    value: function getData() {}\n  }, {\n    key: \"getAttrs\",\n    value: function getAttrs() {\n      return {\n        'data-uuid': this.uuid\n      };\n    }\n  }, {\n    key: \"getPreviewData\",\n    value: function getPreviewData() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$position = _ref3.position,\n          position = _ref3$position === void 0 ? 'static' : _ref3$position,\n          _ref3$isRem = _ref3.isRem,\n          isRem = _ref3$isRem === void 0 ? false : _ref3$isRem,\n          _ref3$mode = _ref3.mode,\n          mode = _ref3$mode === void 0 ? 'preview' : _ref3$mode;\n\n      var style = this.getStyle({\n        position: position\n      });\n      var data = {\n        style: style,\n        props: this.getProps({\n          mode: mode\n        }),\n        attrs: this.getAttrs()\n      };\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$zindex = _ref4.zindex,\n          zindex = _ref4$zindex === void 0 ? this.commonStyle.zindex + 1 : _ref4$zindex;\n\n      return new Element({\n        zindex: zindex,\n        name: this.name,\n        pluginProps: this.pluginProps,\n        commonStyle: _objectSpread({}, this.commonStyle, {\n          top: this.commonStyle.top + 20,\n          left: this.commonStyle.left + 20\n        })\n      });\n    }\n  }]);\n\n  return Element;\n}();\n\nexport default Element;",null]}