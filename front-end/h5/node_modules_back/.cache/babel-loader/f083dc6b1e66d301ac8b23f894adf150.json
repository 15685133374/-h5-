{"remainingRequest":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js!d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\editor.js","dependencies":[{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\src\\store\\modules\\editor.js","mtime":1575526862392},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1575454488217},{"path":"d:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"d:\\\\project\\\\luban\\\\luban-h5\\\\front-end\\\\h5\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// initial state\nimport Work from \"../../components/core/models/work\";\nimport { actions as pageActions, mutations as pageMutations } from \"./page\";\nimport { actions as elementActions, mutations as elementMutations } from \"./element\";\nimport { actions as workActions, mutations as workMutations } from \"./work\";\nvar state = {\n  works: [],\n  work: new Work(),\n  editingPage: {\n    elements: []\n  },\n  editingElement: null,\n  editingElementEditorConfig: null,\n  formDetailOfWork: {\n    uuidMap2Name: {},\n    formRecords: []\n  },\n  workTemplates: []\n}; // getters\n\nvar getters = {}; // actions\n\nvar actions = _objectSpread({}, elementActions, {}, pageActions, {}, workActions); // mutations\n\n\nvar mutations = _objectSpread({}, elementMutations, {}, pageMutations, {}, workMutations);\n\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",null]}