{"remainingRequest":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\src\\views\\work-manager\\list.vue","mtime":1575526862472},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\babel-loader\\lib\\index.js","mtime":1575361257763},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575454486584},{"path":"D:\\project\\luban\\luban-h5\\front-end\\h5\\node_modules\\vue-loader\\lib\\index.js","mtime":1575454488300}],"contextDependencies":[],"result":["\r\nimport { mapState, mapActions } from 'vuex'\r\nimport QRCode from 'qrcode'\r\n\r\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue'\r\nimport CardCover from '@/components/common/work/card-cover.js'\r\n\r\nconst ListItemCard = {\r\n  props: {\r\n    work: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n    handleClickEdit: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    handleClickPreview: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data: () => ({\r\n    qrcodeUrl: ''\r\n  }),\r\n  methods: {\r\n    timeFmt (date) {\r\n      const dateTime = new Date(date)\r\n      const displayTime = `${dateTime.getFullYear()}-${dateTime.getMonth() +\r\n        1}-${dateTime.getDate()}`\r\n      return displayTime\r\n    },\r\n    genQRCodeUrl (work) {\r\n      const url = `/works/preview/${work.id}`\r\n      QRCode.toDataURL(url, (err, url) => {\r\n        if (err) console.log(err)\r\n        this.qrcodeUrl = url\r\n      })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <a-card hoverable >\r\n        <CardCover slot=\"cover\" qrcodeUrl={this.qrcodeUrl} coverImageUrl={this.work.cover_image_url} />\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 编辑 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.edit')}>\r\n            <router-link to={{ name: 'editor', params: { workId: this.work.id } }} target=\"_blank\">\r\n              <a-icon type=\"edit\" title={this.$t('workCard.edit')}/>\r\n            </router-link>\r\n          </a-tooltip>\r\n          {/** 预览 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.preview')}>\r\n            <a-icon type=\"eye\" title={this.$t('workCard.preview')} onClick={this.handleClickPreview} />\r\n          </a-tooltip>\r\n          {\r\n            this.qrcodeUrl\r\n              ? <a-icon type=\"close-circle\" onClick={() => { this.qrcodeUrl = '' }} />\r\n              : <a-icon type=\"qrcode\" onClick={() => this.genQRCodeUrl(this.work)} />\r\n          }\r\n          {/**\r\n          <a-icon type=\"setting\" />\r\n          <a-icon type=\"ellipsis\" />\r\n           */}\r\n        </template>\r\n        <a-card-meta\r\n        >\r\n          <div slot=\"title\" class=\"ant-card-meta-title\" style=\"font-size: 14px;\">\r\n            {this.work.title}({this.work.id})\r\n          </div>\r\n          <div slot=\"description\" style=\"font-size: 12px;\">\r\n            {/** 描述 时间 */}\r\n            <div>{this.$t('workCard.description')}: {this.work.description}</div>\r\n            <div>{this.$t('workCard.createTime')}: {this.timeFmt(this.work.created_at)}</div>\r\n          </div>\r\n        </a-card-meta>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\n\r\nconst AddNewCard = {\r\n  functional: true,\r\n  render (h, { props, parent }) {\r\n    return (\r\n      <a-card hoverable>\r\n        <div slot=\"cover\" class=\"flex-center\" style=\"height: 415px;background: #f7f5f557;\" onClick={props.handleCreate}>\r\n          <a-icon type=\"plus\" />\r\n        </div>\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 创建新作品 */}\r\n          {/** https://kazupon.github.io/vue-i18n/guide/component.html#translation-in-functional-component */}\r\n          <span onClick={props.handleCreate}>{parent.$t('workCard.createNewWork')}</span>\r\n        </template>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    ListItemCard,\r\n    AddNewCard\r\n  },\r\n  data: () => ({\r\n    activeWork: null,\r\n    previewVisible: false\r\n  }),\r\n  computed: {\r\n    ...mapState('editor', ['works']),\r\n    ...mapState('loading', ['fetchWorks_loading'])\r\n  },\r\n  methods: {\r\n    ...mapActions('editor', [\r\n      'fetchWorks'\r\n    ]),\r\n    deleteWork (item) {\r\n      // TODO delete work from work list\r\n    },\r\n    createWork () {\r\n      this.$router.push({ name: 'editor' })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <div class=\"works-wrapper\">\r\n        <a-row gutter={12}>\r\n          <a-col span={6} style=\"margin-bottom: 10px;\">\r\n            <AddNewCard handleCreate={this.createWork} />\r\n          </a-col>\r\n          {\r\n            this.fetchWorks_loading\r\n              ? <a-col span={18} style=\"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\">\r\n                <a-spin tip=\"作品列表获取中...\"/>\r\n              </a-col>\r\n              : this.works.map(work => (\r\n                <a-col span={6} key={work.id} style=\"margin-bottom: 20px;\">\r\n                  <ListItemCard work={work} handleClickPreview={e => {\r\n                    this.previewVisible = true\r\n                    this.activeWork = work\r\n                  }} />\r\n                </a-col>\r\n              ))\r\n          }\r\n        </a-row>\r\n        {\r\n          <PreviewDialog\r\n            work={this.activeWork || {}}\r\n            visible={this.previewVisible}\r\n            handleClose={() => { this.previewVisible = false }}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  },\r\n  created () {\r\n    this.fetchWorks()\r\n  }\r\n}\r\n",{"version":3,"sources":["list.vue"],"names":[],"mappingsfile":"list.vue","sourceRoot":"src/views/work-manager","sourcesContent":["<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport QRCode from 'qrcode'\r\n\r\nimport PreviewDialog from '@/components/core/editor/modals/preview.vue'\r\nimport CardCover from '@/components/common/work/card-cover.js'\r\n\r\nconst ListItemCard = {\r\n  props: {\r\n    work: {\r\n      type: Object,\r\n      default: () => {}\r\n    },\r\n    handleClickEdit: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    handleClickPreview: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data: () => ({\r\n    qrcodeUrl: ''\r\n  }),\r\n  methods: {\r\n    timeFmt (date) {\r\n      const dateTime = new Date(date)\r\n      const displayTime = `${dateTime.getFullYear()}-${dateTime.getMonth() +\r\n        1}-${dateTime.getDate()}`\r\n      return displayTime\r\n    },\r\n    genQRCodeUrl (work) {\r\n      const url = `/works/preview/${work.id}`\r\n      QRCode.toDataURL(url, (err, url) => {\r\n        if (err) console.log(err)\r\n        this.qrcodeUrl = url\r\n      })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <a-card hoverable >\r\n        <CardCover slot=\"cover\" qrcodeUrl={this.qrcodeUrl} coverImageUrl={this.work.cover_image_url} />\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 编辑 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.edit')}>\r\n            <router-link to={{ name: 'editor', params: { workId: this.work.id } }} target=\"_blank\">\r\n              <a-icon type=\"edit\" title={this.$t('workCard.edit')}/>\r\n            </router-link>\r\n          </a-tooltip>\r\n          {/** 预览 */}\r\n          <a-tooltip effect=\"dark\" placement=\"bottom\" title={this.$t('workCard.preview')}>\r\n            <a-icon type=\"eye\" title={this.$t('workCard.preview')} onClick={this.handleClickPreview} />\r\n          </a-tooltip>\r\n          {\r\n            this.qrcodeUrl\r\n              ? <a-icon type=\"close-circle\" onClick={() => { this.qrcodeUrl = '' }} />\r\n              : <a-icon type=\"qrcode\" onClick={() => this.genQRCodeUrl(this.work)} />\r\n          }\r\n          {/**\r\n          <a-icon type=\"setting\" />\r\n          <a-icon type=\"ellipsis\" />\r\n           */}\r\n        </template>\r\n        <a-card-meta\r\n        >\r\n          <div slot=\"title\" class=\"ant-card-meta-title\" style=\"font-size: 14px;\">\r\n            {this.work.title}({this.work.id})\r\n          </div>\r\n          <div slot=\"description\" style=\"font-size: 12px;\">\r\n            {/** 描述 时间 */}\r\n            <div>{this.$t('workCard.description')}: {this.work.description}</div>\r\n            <div>{this.$t('workCard.createTime')}: {this.timeFmt(this.work.created_at)}</div>\r\n          </div>\r\n        </a-card-meta>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\n\r\nconst AddNewCard = {\r\n  functional: true,\r\n  render (h, { props, parent }) {\r\n    return (\r\n      <a-card hoverable>\r\n        <div slot=\"cover\" class=\"flex-center\" style=\"height: 415px;background: #f7f5f557;\" onClick={props.handleCreate}>\r\n          <a-icon type=\"plus\" />\r\n        </div>\r\n        <template class=\"ant-card-actions\" slot=\"actions\">\r\n          {/** 创建新作品 */}\r\n          {/** https://kazupon.github.io/vue-i18n/guide/component.html#translation-in-functional-component */}\r\n          <span onClick={props.handleCreate}>{parent.$t('workCard.createNewWork')}</span>\r\n        </template>\r\n      </a-card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default {\r\n  components: {\r\n    ListItemCard,\r\n    AddNewCard\r\n  },\r\n  data: () => ({\r\n    activeWork: null,\r\n    previewVisible: false\r\n  }),\r\n  computed: {\r\n    ...mapState('editor', ['works']),\r\n    ...mapState('loading', ['fetchWorks_loading'])\r\n  },\r\n  methods: {\r\n    ...mapActions('editor', [\r\n      'fetchWorks'\r\n    ]),\r\n    deleteWork (item) {\r\n      // TODO delete work from work list\r\n    },\r\n    createWork () {\r\n      this.$router.push({ name: 'editor' })\r\n    }\r\n  },\r\n  render (h) {\r\n    return (\r\n      <div class=\"works-wrapper\">\r\n        <a-row gutter={12}>\r\n          <a-col span={6} style=\"margin-bottom: 10px;\">\r\n            <AddNewCard handleCreate={this.createWork} />\r\n          </a-col>\r\n          {\r\n            this.fetchWorks_loading\r\n              ? <a-col span={18} style=\"margin-bottom: 10px;text-align: center;height: 355px;line-height: 355px;border-bottom: 1px solid #ebedf0;background: rgba(255, 255, 255, 0.5);\">\r\n                <a-spin tip=\"作品列表获取中...\"/>\r\n              </a-col>\r\n              : this.works.map(work => (\r\n                <a-col span={6} key={work.id} style=\"margin-bottom: 20px;\">\r\n                  <ListItemCard work={work} handleClickPreview={e => {\r\n                    this.previewVisible = true\r\n                    this.activeWork = work\r\n                  }} />\r\n                </a-col>\r\n              ))\r\n          }\r\n        </a-row>\r\n        {\r\n          <PreviewDialog\r\n            work={this.activeWork || {}}\r\n            visible={this.previewVisible}\r\n            handleClose={() => { this.previewVisible = false }}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  },\r\n  created () {\r\n    this.fetchWorks()\r\n  }\r\n}\r\n</script>\r\n"]}]}